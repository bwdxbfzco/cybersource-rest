// Code generated by go-swagger; DO NOT EDIT.

package push_funds

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreatePushFundsTransferParams creates a new CreatePushFundsTransferParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreatePushFundsTransferParams() *CreatePushFundsTransferParams {
	return &CreatePushFundsTransferParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreatePushFundsTransferParamsWithTimeout creates a new CreatePushFundsTransferParams object
// with the ability to set a timeout on a request.
func NewCreatePushFundsTransferParamsWithTimeout(timeout time.Duration) *CreatePushFundsTransferParams {
	return &CreatePushFundsTransferParams{
		timeout: timeout,
	}
}

// NewCreatePushFundsTransferParamsWithContext creates a new CreatePushFundsTransferParams object
// with the ability to set a context for a request.
func NewCreatePushFundsTransferParamsWithContext(ctx context.Context) *CreatePushFundsTransferParams {
	return &CreatePushFundsTransferParams{
		Context: ctx,
	}
}

// NewCreatePushFundsTransferParamsWithHTTPClient creates a new CreatePushFundsTransferParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreatePushFundsTransferParamsWithHTTPClient(client *http.Client) *CreatePushFundsTransferParams {
	return &CreatePushFundsTransferParams{
		HTTPClient: client,
	}
}

/*
CreatePushFundsTransferParams contains all the parameters to send to the API endpoint

	for the create push funds transfer operation.

	Typically these are written to a http.Request.
*/
type CreatePushFundsTransferParams struct {

	// ContentType.
	ContentType string

	// PushFundsRequest.
	PushFundsRequest CreatePushFundsTransferBody

	// VcCorrelationID.
	VcCorrelationID string

	// VcMerchantID.
	VcMerchantID string

	// VcOrganizationID.
	VcOrganizationID string

	// VcPermissions.
	VcPermissions string

	// XRequestid.
	XRequestid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create push funds transfer params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreatePushFundsTransferParams) WithDefaults() *CreatePushFundsTransferParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create push funds transfer params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreatePushFundsTransferParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create push funds transfer params
func (o *CreatePushFundsTransferParams) WithTimeout(timeout time.Duration) *CreatePushFundsTransferParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create push funds transfer params
func (o *CreatePushFundsTransferParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create push funds transfer params
func (o *CreatePushFundsTransferParams) WithContext(ctx context.Context) *CreatePushFundsTransferParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create push funds transfer params
func (o *CreatePushFundsTransferParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create push funds transfer params
func (o *CreatePushFundsTransferParams) WithHTTPClient(client *http.Client) *CreatePushFundsTransferParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create push funds transfer params
func (o *CreatePushFundsTransferParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContentType adds the contentType to the create push funds transfer params
func (o *CreatePushFundsTransferParams) WithContentType(contentType string) *CreatePushFundsTransferParams {
	o.SetContentType(contentType)
	return o
}

// SetContentType adds the contentType to the create push funds transfer params
func (o *CreatePushFundsTransferParams) SetContentType(contentType string) {
	o.ContentType = contentType
}

// WithPushFundsRequest adds the pushFundsRequest to the create push funds transfer params
func (o *CreatePushFundsTransferParams) WithPushFundsRequest(pushFundsRequest CreatePushFundsTransferBody) *CreatePushFundsTransferParams {
	o.SetPushFundsRequest(pushFundsRequest)
	return o
}

// SetPushFundsRequest adds the pushFundsRequest to the create push funds transfer params
func (o *CreatePushFundsTransferParams) SetPushFundsRequest(pushFundsRequest CreatePushFundsTransferBody) {
	o.PushFundsRequest = pushFundsRequest
}

// WithVcCorrelationID adds the vcCorrelationID to the create push funds transfer params
func (o *CreatePushFundsTransferParams) WithVcCorrelationID(vcCorrelationID string) *CreatePushFundsTransferParams {
	o.SetVcCorrelationID(vcCorrelationID)
	return o
}

// SetVcCorrelationID adds the vCCorrelationId to the create push funds transfer params
func (o *CreatePushFundsTransferParams) SetVcCorrelationID(vcCorrelationID string) {
	o.VcCorrelationID = vcCorrelationID
}

// WithVcMerchantID adds the vcMerchantID to the create push funds transfer params
func (o *CreatePushFundsTransferParams) WithVcMerchantID(vcMerchantID string) *CreatePushFundsTransferParams {
	o.SetVcMerchantID(vcMerchantID)
	return o
}

// SetVcMerchantID adds the vCMerchantId to the create push funds transfer params
func (o *CreatePushFundsTransferParams) SetVcMerchantID(vcMerchantID string) {
	o.VcMerchantID = vcMerchantID
}

// WithVcOrganizationID adds the vcOrganizationID to the create push funds transfer params
func (o *CreatePushFundsTransferParams) WithVcOrganizationID(vcOrganizationID string) *CreatePushFundsTransferParams {
	o.SetVcOrganizationID(vcOrganizationID)
	return o
}

// SetVcOrganizationID adds the vCOrganizationId to the create push funds transfer params
func (o *CreatePushFundsTransferParams) SetVcOrganizationID(vcOrganizationID string) {
	o.VcOrganizationID = vcOrganizationID
}

// WithVcPermissions adds the vcPermissions to the create push funds transfer params
func (o *CreatePushFundsTransferParams) WithVcPermissions(vcPermissions string) *CreatePushFundsTransferParams {
	o.SetVcPermissions(vcPermissions)
	return o
}

// SetVcPermissions adds the vCPermissions to the create push funds transfer params
func (o *CreatePushFundsTransferParams) SetVcPermissions(vcPermissions string) {
	o.VcPermissions = vcPermissions
}

// WithXRequestid adds the xRequestid to the create push funds transfer params
func (o *CreatePushFundsTransferParams) WithXRequestid(xRequestid string) *CreatePushFundsTransferParams {
	o.SetXRequestid(xRequestid)
	return o
}

// SetXRequestid adds the xRequestid to the create push funds transfer params
func (o *CreatePushFundsTransferParams) SetXRequestid(xRequestid string) {
	o.XRequestid = xRequestid
}

// WriteToRequest writes these params to a swagger request
func (o *CreatePushFundsTransferParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Content-Type
	if err := r.SetHeaderParam("Content-Type", o.ContentType); err != nil {
		return err
	}
	if err := r.SetBodyParam(o.PushFundsRequest); err != nil {
		return err
	}

	// header param v-c-correlation-id
	if err := r.SetHeaderParam("v-c-correlation-id", o.VcCorrelationID); err != nil {
		return err
	}

	// header param v-c-merchant-id
	if err := r.SetHeaderParam("v-c-merchant-id", o.VcMerchantID); err != nil {
		return err
	}

	// header param v-c-organization-id
	if err := r.SetHeaderParam("v-c-organization-id", o.VcOrganizationID); err != nil {
		return err
	}

	// header param v-c-permissions
	if err := r.SetHeaderParam("v-c-permissions", o.VcPermissions); err != nil {
		return err
	}

	// header param x-requestid
	if err := r.SetHeaderParam("x-requestid", o.XRequestid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
