// Code generated by go-swagger; DO NOT EDIT.

package unified_checkout_capture_context

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GenerateUnifiedCheckoutCaptureContextReader is a Reader for the GenerateUnifiedCheckoutCaptureContext structure.
type GenerateUnifiedCheckoutCaptureContextReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GenerateUnifiedCheckoutCaptureContextReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewGenerateUnifiedCheckoutCaptureContextCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGenerateUnifiedCheckoutCaptureContextBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /up/v1/capture-contexts] generateUnifiedCheckoutCaptureContext", response, response.Code())
	}
}

// NewGenerateUnifiedCheckoutCaptureContextCreated creates a GenerateUnifiedCheckoutCaptureContextCreated with default headers values
func NewGenerateUnifiedCheckoutCaptureContextCreated() *GenerateUnifiedCheckoutCaptureContextCreated {
	return &GenerateUnifiedCheckoutCaptureContextCreated{}
}

/*
GenerateUnifiedCheckoutCaptureContextCreated describes a response with status code 201, with default header values.

Capture Context Created
*/
type GenerateUnifiedCheckoutCaptureContextCreated struct {
	Payload string
}

// IsSuccess returns true when this generate unified checkout capture context created response has a 2xx status code
func (o *GenerateUnifiedCheckoutCaptureContextCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this generate unified checkout capture context created response has a 3xx status code
func (o *GenerateUnifiedCheckoutCaptureContextCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate unified checkout capture context created response has a 4xx status code
func (o *GenerateUnifiedCheckoutCaptureContextCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this generate unified checkout capture context created response has a 5xx status code
func (o *GenerateUnifiedCheckoutCaptureContextCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this generate unified checkout capture context created response a status code equal to that given
func (o *GenerateUnifiedCheckoutCaptureContextCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the generate unified checkout capture context created response
func (o *GenerateUnifiedCheckoutCaptureContextCreated) Code() int {
	return 201
}

func (o *GenerateUnifiedCheckoutCaptureContextCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /up/v1/capture-contexts][%d] generateUnifiedCheckoutCaptureContextCreated %s", 201, payload)
}

func (o *GenerateUnifiedCheckoutCaptureContextCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /up/v1/capture-contexts][%d] generateUnifiedCheckoutCaptureContextCreated %s", 201, payload)
}

func (o *GenerateUnifiedCheckoutCaptureContextCreated) GetPayload() string {
	return o.Payload
}

func (o *GenerateUnifiedCheckoutCaptureContextCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateUnifiedCheckoutCaptureContextBadRequest creates a GenerateUnifiedCheckoutCaptureContextBadRequest with default headers values
func NewGenerateUnifiedCheckoutCaptureContextBadRequest() *GenerateUnifiedCheckoutCaptureContextBadRequest {
	return &GenerateUnifiedCheckoutCaptureContextBadRequest{}
}

/*
GenerateUnifiedCheckoutCaptureContextBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GenerateUnifiedCheckoutCaptureContextBadRequest struct {
	Payload *GenerateUnifiedCheckoutCaptureContextBadRequestBody
}

// IsSuccess returns true when this generate unified checkout capture context bad request response has a 2xx status code
func (o *GenerateUnifiedCheckoutCaptureContextBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate unified checkout capture context bad request response has a 3xx status code
func (o *GenerateUnifiedCheckoutCaptureContextBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate unified checkout capture context bad request response has a 4xx status code
func (o *GenerateUnifiedCheckoutCaptureContextBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this generate unified checkout capture context bad request response has a 5xx status code
func (o *GenerateUnifiedCheckoutCaptureContextBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this generate unified checkout capture context bad request response a status code equal to that given
func (o *GenerateUnifiedCheckoutCaptureContextBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the generate unified checkout capture context bad request response
func (o *GenerateUnifiedCheckoutCaptureContextBadRequest) Code() int {
	return 400
}

func (o *GenerateUnifiedCheckoutCaptureContextBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /up/v1/capture-contexts][%d] generateUnifiedCheckoutCaptureContextBadRequest %s", 400, payload)
}

func (o *GenerateUnifiedCheckoutCaptureContextBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /up/v1/capture-contexts][%d] generateUnifiedCheckoutCaptureContextBadRequest %s", 400, payload)
}

func (o *GenerateUnifiedCheckoutCaptureContextBadRequest) GetPayload() *GenerateUnifiedCheckoutCaptureContextBadRequestBody {
	return o.Payload
}

func (o *GenerateUnifiedCheckoutCaptureContextBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GenerateUnifiedCheckoutCaptureContextBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GenerateUnifiedCheckoutCaptureContextBadRequestBody generate unified checkout capture context bad request body
swagger:model GenerateUnifiedCheckoutCaptureContextBadRequestBody
*/
type GenerateUnifiedCheckoutCaptureContextBadRequestBody struct {

	// correlation Id
	CorrelationID string `json:"correlationId,omitempty"`

	// details
	Details []*GenerateUnifiedCheckoutCaptureContextBadRequestBodyDetailsItems0 `json:"details"`

	// information link
	InformationLink string `json:"informationLink,omitempty"`

	// message
	// Required: true
	Message *string `json:"message"`

	// reason
	// Required: true
	// Enum: ["INVALID_APIKEY","INVALID_SHIPPING_INPUT_PARAMS","CAPTURE_CONTEXT_INVALID","CAPTURE_CONTEXT_EXPIRED","SDK_XHR_ERROR","UNIFIEDPAYMENTS_VALIDATION_PARAMS","UNIFIEDPAYMENTS_VALIDATION_FIELDS","UNIFIEDPAYMENT_PAYMENT_PARAMITERS","CREATE_TOKEN_TIMEOUT","CREATE_TOKEN_XHR_ERROR","SHOW_LOAD_CONTAINER_SELECTOR","SHOW_LOAD_INVALID_CONTAINER","SHOW_TOKEN_TIMEOUT","SHOW_TOKEN_XHR_ERROR","SHOW_PAYMENT_TIMEOUT"]
	Reason *string `json:"reason"`
}

// Validate validates this generate unified checkout capture context bad request body
func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateReason(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generateUnifiedCheckoutCaptureContextBadRequest" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("generateUnifiedCheckoutCaptureContextBadRequest" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("generateUnifiedCheckoutCaptureContextBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var generateUnifiedCheckoutCaptureContextBadRequestBodyTypeReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["INVALID_APIKEY","INVALID_SHIPPING_INPUT_PARAMS","CAPTURE_CONTEXT_INVALID","CAPTURE_CONTEXT_EXPIRED","SDK_XHR_ERROR","UNIFIEDPAYMENTS_VALIDATION_PARAMS","UNIFIEDPAYMENTS_VALIDATION_FIELDS","UNIFIEDPAYMENT_PAYMENT_PARAMITERS","CREATE_TOKEN_TIMEOUT","CREATE_TOKEN_XHR_ERROR","SHOW_LOAD_CONTAINER_SELECTOR","SHOW_LOAD_INVALID_CONTAINER","SHOW_TOKEN_TIMEOUT","SHOW_TOKEN_XHR_ERROR","SHOW_PAYMENT_TIMEOUT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		generateUnifiedCheckoutCaptureContextBadRequestBodyTypeReasonPropEnum = append(generateUnifiedCheckoutCaptureContextBadRequestBodyTypeReasonPropEnum, v)
	}
}

const (

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonINVALIDAPIKEY captures enum value "INVALID_APIKEY"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonINVALIDAPIKEY string = "INVALID_APIKEY"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonINVALIDSHIPPINGINPUTPARAMS captures enum value "INVALID_SHIPPING_INPUT_PARAMS"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonINVALIDSHIPPINGINPUTPARAMS string = "INVALID_SHIPPING_INPUT_PARAMS"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonCAPTURECONTEXTINVALID captures enum value "CAPTURE_CONTEXT_INVALID"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonCAPTURECONTEXTINVALID string = "CAPTURE_CONTEXT_INVALID"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonCAPTURECONTEXTEXPIRED captures enum value "CAPTURE_CONTEXT_EXPIRED"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonCAPTURECONTEXTEXPIRED string = "CAPTURE_CONTEXT_EXPIRED"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSDKXHRERROR captures enum value "SDK_XHR_ERROR"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSDKXHRERROR string = "SDK_XHR_ERROR"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonUNIFIEDPAYMENTSVALIDATIONPARAMS captures enum value "UNIFIEDPAYMENTS_VALIDATION_PARAMS"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonUNIFIEDPAYMENTSVALIDATIONPARAMS string = "UNIFIEDPAYMENTS_VALIDATION_PARAMS"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonUNIFIEDPAYMENTSVALIDATIONFIELDS captures enum value "UNIFIEDPAYMENTS_VALIDATION_FIELDS"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonUNIFIEDPAYMENTSVALIDATIONFIELDS string = "UNIFIEDPAYMENTS_VALIDATION_FIELDS"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonUNIFIEDPAYMENTPAYMENTPARAMITERS captures enum value "UNIFIEDPAYMENT_PAYMENT_PARAMITERS"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonUNIFIEDPAYMENTPAYMENTPARAMITERS string = "UNIFIEDPAYMENT_PAYMENT_PARAMITERS"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonCREATETOKENTIMEOUT captures enum value "CREATE_TOKEN_TIMEOUT"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonCREATETOKENTIMEOUT string = "CREATE_TOKEN_TIMEOUT"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonCREATETOKENXHRERROR captures enum value "CREATE_TOKEN_XHR_ERROR"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonCREATETOKENXHRERROR string = "CREATE_TOKEN_XHR_ERROR"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSHOWLOADCONTAINERSELECTOR captures enum value "SHOW_LOAD_CONTAINER_SELECTOR"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSHOWLOADCONTAINERSELECTOR string = "SHOW_LOAD_CONTAINER_SELECTOR"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSHOWLOADINVALIDCONTAINER captures enum value "SHOW_LOAD_INVALID_CONTAINER"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSHOWLOADINVALIDCONTAINER string = "SHOW_LOAD_INVALID_CONTAINER"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSHOWTOKENTIMEOUT captures enum value "SHOW_TOKEN_TIMEOUT"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSHOWTOKENTIMEOUT string = "SHOW_TOKEN_TIMEOUT"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSHOWTOKENXHRERROR captures enum value "SHOW_TOKEN_XHR_ERROR"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSHOWTOKENXHRERROR string = "SHOW_TOKEN_XHR_ERROR"

	// GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSHOWPAYMENTTIMEOUT captures enum value "SHOW_PAYMENT_TIMEOUT"
	GenerateUnifiedCheckoutCaptureContextBadRequestBodyReasonSHOWPAYMENTTIMEOUT string = "SHOW_PAYMENT_TIMEOUT"
)

// prop value enum
func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBody) validateReasonEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, generateUnifiedCheckoutCaptureContextBadRequestBodyTypeReasonPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBody) validateReason(formats strfmt.Registry) error {

	if err := validate.Required("generateUnifiedCheckoutCaptureContextBadRequest"+"."+"reason", "body", o.Reason); err != nil {
		return err
	}

	// value enum
	if err := o.validateReasonEnum("generateUnifiedCheckoutCaptureContextBadRequest"+"."+"reason", "body", *o.Reason); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this generate unified checkout capture context bad request body based on the context it is used
func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {

			if swag.IsZero(o.Details[i]) { // not required
				return nil
			}

			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generateUnifiedCheckoutCaptureContextBadRequest" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("generateUnifiedCheckoutCaptureContextBadRequest" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GenerateUnifiedCheckoutCaptureContextBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateUnifiedCheckoutCaptureContextBadRequestBodyDetailsItems0 generate unified checkout capture context bad request body details items0
swagger:model GenerateUnifiedCheckoutCaptureContextBadRequestBodyDetailsItems0
*/
type GenerateUnifiedCheckoutCaptureContextBadRequestBodyDetailsItems0 struct {

	// location
	Location string `json:"location,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this generate unified checkout capture context bad request body details items0
func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this generate unified checkout capture context bad request body details items0 based on context it is used
func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextBadRequestBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GenerateUnifiedCheckoutCaptureContextBadRequestBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateUnifiedCheckoutCaptureContextBody generate unified checkout capture context body
swagger:model GenerateUnifiedCheckoutCaptureContextBody
*/
type GenerateUnifiedCheckoutCaptureContextBody struct {

	// allowed card networks
	AllowedCardNetworks []string `json:"allowedCardNetworks"`

	// allowed payment types
	AllowedPaymentTypes []string `json:"allowedPaymentTypes"`

	// capture mandate
	CaptureMandate *GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate `json:"captureMandate,omitempty"`

	// checkout Api initialization
	CheckoutAPIInitialization *GenerateUnifiedCheckoutCaptureContextParamsBodyCheckoutAPIInitialization `json:"checkoutApiInitialization,omitempty"`

	// version number of Unified Checkout being used
	// Example: 0.19
	// Max Length: 60
	ClientVersion string `json:"clientVersion,omitempty"`

	// Country the purchase is originating from (e.g. country of the merchant). Use the two- character ISO Standard
	// Example: US
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Localization of the User experience conforming to the ISO 639-1 language standards and two-character ISO Standard Country Code
	// Example: en_US
	Locale string `json:"locale,omitempty"`

	// order information
	OrderInformation *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation `json:"orderInformation,omitempty"`

	// target origins
	TargetOrigins []string `json:"targetOrigins"`
}

// Validate validates this generate unified checkout capture context body
func (o *GenerateUnifiedCheckoutCaptureContextBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCaptureMandate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCheckoutAPIInitialization(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateClientVersion(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOrderInformation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBody) validateCaptureMandate(formats strfmt.Registry) error {
	if swag.IsZero(o.CaptureMandate) { // not required
		return nil
	}

	if o.CaptureMandate != nil {
		if err := o.CaptureMandate.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "captureMandate")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "captureMandate")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBody) validateCheckoutAPIInitialization(formats strfmt.Registry) error {
	if swag.IsZero(o.CheckoutAPIInitialization) { // not required
		return nil
	}

	if o.CheckoutAPIInitialization != nil {
		if err := o.CheckoutAPIInitialization.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "checkoutApiInitialization")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "checkoutApiInitialization")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBody) validateClientVersion(formats strfmt.Registry) error {
	if swag.IsZero(o.ClientVersion) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"clientVersion", "body", o.ClientVersion, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBody) validateCountry(formats strfmt.Registry) error {
	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"country", "body", o.Country, 2); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBody) validateOrderInformation(formats strfmt.Registry) error {
	if swag.IsZero(o.OrderInformation) { // not required
		return nil
	}

	if o.OrderInformation != nil {
		if err := o.OrderInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this generate unified checkout capture context body based on the context it is used
func (o *GenerateUnifiedCheckoutCaptureContextBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCaptureMandate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateCheckoutAPIInitialization(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateOrderInformation(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBody) contextValidateCaptureMandate(ctx context.Context, formats strfmt.Registry) error {

	if o.CaptureMandate != nil {

		if swag.IsZero(o.CaptureMandate) { // not required
			return nil
		}

		if err := o.CaptureMandate.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "captureMandate")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "captureMandate")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBody) contextValidateCheckoutAPIInitialization(ctx context.Context, formats strfmt.Registry) error {

	if o.CheckoutAPIInitialization != nil {

		if swag.IsZero(o.CheckoutAPIInitialization) { // not required
			return nil
		}

		if err := o.CheckoutAPIInitialization.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "checkoutApiInitialization")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "checkoutApiInitialization")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextBody) contextValidateOrderInformation(ctx context.Context, formats strfmt.Registry) error {

	if o.OrderInformation != nil {

		if swag.IsZero(o.OrderInformation) { // not required
			return nil
		}

		if err := o.OrderInformation.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextBody) UnmarshalBinary(b []byte) error {
	var res GenerateUnifiedCheckoutCaptureContextBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate generate unified checkout capture context params body capture mandate
swagger:model GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate
*/
type GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate struct {

	// This field defines the type of Billing Address information captured through the Manual card Entry UX. FULL, PARTIAL
	// Example: FULL
	// Max Length: 25
	BillingType string `json:"billingType,omitempty"`

	// Capture email contact information in the manual card acceptance screens.
	RequestEmail bool `json:"requestEmail,omitempty"`

	// Capture email contact information in the manual card acceptance screens.
	RequestPhone bool `json:"requestPhone,omitempty"`

	// Capture email contact information in the manual card acceptance screens.
	RequestShipping bool `json:"requestShipping,omitempty"`

	// List of countries available to ship to. Use the two- character ISO Standard Country Codes.
	ShipToCountries []string `json:"shipToCountries"`

	// Show the list of accepted payment icons in the payment button
	ShowAcceptedNetworkIcons bool `json:"showAcceptedNetworkIcons,omitempty"`
}

// Validate validates this generate unified checkout capture context params body capture mandate
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBillingType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShipToCountries(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate) validateBillingType(formats strfmt.Registry) error {
	if swag.IsZero(o.BillingType) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"captureMandate"+"."+"billingType", "body", o.BillingType, 25); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate) validateShipToCountries(formats strfmt.Registry) error {
	if swag.IsZero(o.ShipToCountries) { // not required
		return nil
	}

	for i := 0; i < len(o.ShipToCountries); i++ {

		if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"captureMandate"+"."+"shipToCountries"+"."+strconv.Itoa(i), "body", o.ShipToCountries[i], 2); err != nil {
			return err
		}

	}

	return nil
}

// ContextValidate validates this generate unified checkout capture context params body capture mandate based on context it is used
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate) UnmarshalBinary(b []byte) error {
	var res GenerateUnifiedCheckoutCaptureContextParamsBodyCaptureMandate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateUnifiedCheckoutCaptureContextParamsBodyCheckoutAPIInitialization generate unified checkout capture context params body checkout API initialization
swagger:model GenerateUnifiedCheckoutCaptureContextParamsBodyCheckoutAPIInitialization
*/
type GenerateUnifiedCheckoutCaptureContextParamsBodyCheckoutAPIInitialization struct {

	// access key
	// Example: acce55acce55acce55acce55acce5500
	AccessKey string `json:"access_key,omitempty"`

	// amount
	// Example: 100
	Amount string `json:"amount,omitempty"`

	// currency
	// Example: USD
	Currency string `json:"currency,omitempty"`

	// locale
	// Example: en-us
	Locale string `json:"locale,omitempty"`

	// override custom receipt page
	// Example: https://the-up-demo.appspot.com/demos/demo5/receipt
	OverrideCustomReceiptPage string `json:"override_custom_receipt_page,omitempty"`

	// profile id
	// Example: 12341234-1234-1234-1234-123412341234
	ProfileID string `json:"profile_id,omitempty"`

	// reference number
	// Example: 1611305732
	ReferenceNumber string `json:"reference_number,omitempty"`

	// transaction type
	// Example: authorization
	TransactionType string `json:"transaction_type,omitempty"`

	// transaction uuid
	// Example: 1611305732-001
	TransactionUUID string `json:"transaction_uuid,omitempty"`

	// unsigned field names
	// Example: transient_token
	UnsignedFieldNames string `json:"unsigned_field_names,omitempty"`
}

// Validate validates this generate unified checkout capture context params body checkout API initialization
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyCheckoutAPIInitialization) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this generate unified checkout capture context params body checkout API initialization based on context it is used
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyCheckoutAPIInitialization) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyCheckoutAPIInitialization) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyCheckoutAPIInitialization) UnmarshalBinary(b []byte) error {
	var res GenerateUnifiedCheckoutCaptureContextParamsBodyCheckoutAPIInitialization
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation generate unified checkout capture context params body order information
swagger:model GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation
*/
type GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation struct {

	// amount details
	AmountDetails *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationAmountDetails `json:"amountDetails,omitempty"`

	// bill to
	BillTo *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo `json:"billTo,omitempty"`

	// ship to
	ShipTo *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo `json:"shipTo,omitempty"`
}

// Validate validates this generate unified checkout capture context params body order information
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAmountDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBillTo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShipTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation) validateAmountDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.AmountDetails) { // not required
		return nil
	}

	if o.AmountDetails != nil {
		if err := o.AmountDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "amountDetails")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "amountDetails")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation) validateBillTo(formats strfmt.Registry) error {
	if swag.IsZero(o.BillTo) { // not required
		return nil
	}

	if o.BillTo != nil {
		if err := o.BillTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "billTo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "billTo")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation) validateShipTo(formats strfmt.Registry) error {
	if swag.IsZero(o.ShipTo) { // not required
		return nil
	}

	if o.ShipTo != nil {
		if err := o.ShipTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "shipTo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this generate unified checkout capture context params body order information based on the context it is used
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAmountDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateBillTo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateShipTo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation) contextValidateAmountDetails(ctx context.Context, formats strfmt.Registry) error {

	if o.AmountDetails != nil {

		if swag.IsZero(o.AmountDetails) { // not required
			return nil
		}

		if err := o.AmountDetails.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "amountDetails")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "amountDetails")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation) contextValidateBillTo(ctx context.Context, formats strfmt.Registry) error {

	if o.BillTo != nil {

		if swag.IsZero(o.BillTo) { // not required
			return nil
		}

		if err := o.BillTo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "billTo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "billTo")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation) contextValidateShipTo(ctx context.Context, formats strfmt.Registry) error {

	if o.ShipTo != nil {

		if swag.IsZero(o.ShipTo) { // not required
			return nil
		}

		if err := o.ShipTo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "shipTo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation) UnmarshalBinary(b []byte) error {
	var res GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationAmountDetails generate unified checkout capture context params body order information amount details
swagger:model GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationAmountDetails
*/
type GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationAmountDetails struct {

	// currency
	// Example: USD
	Currency string `json:"currency,omitempty"`

	// total amount
	// Example: 21
	TotalAmount string `json:"totalAmount,omitempty"`
}

// Validate validates this generate unified checkout capture context params body order information amount details
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationAmountDetails) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this generate unified checkout capture context params body order information amount details based on context it is used
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationAmountDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationAmountDetails) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationAmountDetails) UnmarshalBinary(b []byte) error {
	var res GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationAmountDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo generate unified checkout capture context params body order information bill to
swagger:model GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo
*/
type GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo struct {

	// Payment card billing street address as it appears on the credit card issuer's records.
	//
	// Example: 277 Park Avenue
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Used for additional address information. For example: _Attention: Accounts Payable_
	// Optional field.
	//
	// Example: 50th Floor
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// Additional address information (third line of the billing address)
	// Example: Desk NY-50110
	// Max Length: 60
	Address3 string `json:"address3,omitempty"`

	// Additional address information (fourth line of the billing address)
	//
	// Example: address4
	// Max Length: 60
	Address4 string `json:"address4,omitempty"`

	// State or province of the billing address. Use the [State, Province, and Territory Codes for the United States and Canada](https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf).
	//
	// Example: NY
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Building number in the street address.
	//
	// Example: buildingNumber
	// Max Length: 256
	BuildingNumber string `json:"buildingNumber,omitempty"`

	// company
	Company *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany `json:"company,omitempty"`

	// Payment card billing country. Use the two-character [ISO Standard Country Codes](http://apps.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf).
	//
	// Example: US
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Customer's neighborhood, community, or region (a barrio in Brazil) within the city or municipality
	//
	// Example: district
	// Max Length: 50
	District string `json:"district,omitempty"`

	// Customer's email address, including the full domain name.
	//
	// Example: john.doe@visa.com
	// Max Length: 255
	Email string `json:"email,omitempty"`

	// Customer's first name. This name must be the same as the name on the card
	// Example: John
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Customer's last name. This name must be the same as the name on the card.
	//
	// Example: Doe
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// Payment card billing city.
	//
	// Example: New York
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Customer's middle name.
	//
	// Example: F
	// Max Length: 60
	MiddleName string `json:"middleName,omitempty"`

	// Customer's name suffix.
	//
	// Example: Jr
	// Max Length: 60
	NameSuffix string `json:"nameSuffix,omitempty"`

	// Customer's phone number.
	//
	// Example: 1234567890
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Customer's phone number type.
	//
	// #### For Payouts:
	// This field may be sent only for FDC Compass.
	//
	// Possible Values:
	// * day
	// * home
	// * night
	// * work
	//
	// Example: phoneType
	PhoneType string `json:"phoneType,omitempty"`

	// Postal code for the billing address. The postal code must consist of 5 to 9 digits.
	//
	// Example: 10172
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`

	// Title.
	//
	// Example: Mr
	// Max Length: 60
	Title string `json:"title,omitempty"`
}

// Validate validates this generate unified checkout capture context params body order information bill to
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress3(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress4(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBuildingNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDistrict(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMiddleName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNameSuffix(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateAddress1(formats strfmt.Registry) error {
	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"address1", "body", o.Address1, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateAddress2(formats strfmt.Registry) error {
	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"address2", "body", o.Address2, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateAddress3(formats strfmt.Registry) error {
	if swag.IsZero(o.Address3) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"address3", "body", o.Address3, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateAddress4(formats strfmt.Registry) error {
	if swag.IsZero(o.Address4) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"address4", "body", o.Address4, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateAdministrativeArea(formats strfmt.Registry) error {
	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"administrativeArea", "body", o.AdministrativeArea, 20); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateBuildingNumber(formats strfmt.Registry) error {
	if swag.IsZero(o.BuildingNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"buildingNumber", "body", o.BuildingNumber, 256); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateCompany(formats strfmt.Registry) error {
	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if o.Company != nil {
		if err := o.Company.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "billTo" + "." + "company")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "billTo" + "." + "company")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateCountry(formats strfmt.Registry) error {
	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"country", "body", o.Country, 2); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateDistrict(formats strfmt.Registry) error {
	if swag.IsZero(o.District) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"district", "body", o.District, 50); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateEmail(formats strfmt.Registry) error {
	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"email", "body", o.Email, 255); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateFirstName(formats strfmt.Registry) error {
	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"firstName", "body", o.FirstName, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateLastName(formats strfmt.Registry) error {
	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"lastName", "body", o.LastName, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateLocality(formats strfmt.Registry) error {
	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"locality", "body", o.Locality, 50); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateMiddleName(formats strfmt.Registry) error {
	if swag.IsZero(o.MiddleName) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"middleName", "body", o.MiddleName, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateNameSuffix(formats strfmt.Registry) error {
	if swag.IsZero(o.NameSuffix) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"nameSuffix", "body", o.NameSuffix, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validatePostalCode(formats strfmt.Registry) error {
	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"postalCode", "body", o.PostalCode, 10); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) validateTitle(formats strfmt.Registry) error {
	if swag.IsZero(o.Title) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"title", "body", o.Title, 60); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this generate unified checkout capture context params body order information bill to based on the context it is used
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCompany(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) contextValidateCompany(ctx context.Context, formats strfmt.Registry) error {

	if o.Company != nil {

		if swag.IsZero(o.Company) { // not required
			return nil
		}

		if err := o.Company.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "billTo" + "." + "company")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateUnifiedCheckoutCaptureContextRequest" + "." + "orderInformation" + "." + "billTo" + "." + "company")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo) UnmarshalBinary(b []byte) error {
	var res GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany generate unified checkout capture context params body order information bill to company
swagger:model GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany
*/
type GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany struct {

	// Payment card billing street address as it appears on the credit card issuer's records.
	//
	// Example: 277 Park Avenue
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Used for additional address information. For example: _Attention: Accounts Payable_
	// Optional field.
	//
	// Example: 50th Floor
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// Additional address information (third line of the billing address)
	// Example: Desk NY-50110
	// Max Length: 60
	Address3 string `json:"address3,omitempty"`

	// Additional address information (fourth line of the billing address)
	//
	// Example: address4
	// Max Length: 60
	Address4 string `json:"address4,omitempty"`

	// State or province of the billing address. Use the [State, Province, and Territory Codes for the United States and Canada](https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf).
	//
	// Example: NY
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Building number in the street address.
	//
	// Example: buildingNumber
	// Max Length: 256
	BuildingNumber string `json:"buildingNumber,omitempty"`

	// Payment card billing country. Use the two-character [ISO Standard Country Codes](http://apps.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf).
	//
	// Example: US
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Customer's neighborhood, community, or region (a barrio in Brazil) within the city or municipality
	//
	// Example: district
	// Max Length: 50
	District string `json:"district,omitempty"`

	// Payment card billing city.
	//
	// Example: New York
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Name of the customer's company.
	// Example: Visa Inc
	// Max Length: 60
	Name string `json:"name,omitempty"`

	// Postal code for the billing address. The postal code must consist of 5 to 9 digits.
	//
	// Example: 10172
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this generate unified checkout capture context params body order information bill to company
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress3(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress4(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBuildingNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDistrict(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validateAddress1(formats strfmt.Registry) error {
	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"address1", "body", o.Address1, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validateAddress2(formats strfmt.Registry) error {
	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"address2", "body", o.Address2, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validateAddress3(formats strfmt.Registry) error {
	if swag.IsZero(o.Address3) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"address3", "body", o.Address3, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validateAddress4(formats strfmt.Registry) error {
	if swag.IsZero(o.Address4) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"address4", "body", o.Address4, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validateAdministrativeArea(formats strfmt.Registry) error {
	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"administrativeArea", "body", o.AdministrativeArea, 20); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validateBuildingNumber(formats strfmt.Registry) error {
	if swag.IsZero(o.BuildingNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"buildingNumber", "body", o.BuildingNumber, 256); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validateCountry(formats strfmt.Registry) error {
	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"country", "body", o.Country, 2); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validateDistrict(formats strfmt.Registry) error {
	if swag.IsZero(o.District) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"district", "body", o.District, 50); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validateLocality(formats strfmt.Registry) error {
	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"locality", "body", o.Locality, 50); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validateName(formats strfmt.Registry) error {
	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"name", "body", o.Name, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) validatePostalCode(formats strfmt.Registry) error {
	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"billTo"+"."+"company"+"."+"postalCode", "body", o.PostalCode, 10); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this generate unified checkout capture context params body order information bill to company based on context it is used
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany) UnmarshalBinary(b []byte) error {
	var res GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationBillToCompany
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo generate unified checkout capture context params body order information ship to
swagger:model GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo
*/
type GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo struct {

	// First line of the shipping address.
	//
	// Example: CyberSource
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Second line of the shipping address.
	//
	// Example: Victoria House
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// Third line of the shipping address.
	//
	// Example: 15-17 Gloucester Street
	Address3 string `json:"address3,omitempty"`

	// Fourth line of the shipping address.
	// Example: string
	// Max Length: 60
	Address4 string `json:"address4,omitempty"`

	// State or province of the shipping address.
	//
	// Use the [State, Province, and Territory Codes for the United States and Canada](https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf)
	//
	// Example: CA
	// Max Length: 2
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Building number in the street address.
	//
	// Example: string
	// Max Length: 15
	BuildingNumber string `json:"buildingNumber,omitempty"`

	// Country of the shipping address.
	//
	// Use the two-character [ISO Standard Country Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf)
	//
	// Example: GB
	Country string `json:"country,omitempty"`

	// Neighborhood, community, or region within a city or municipality.
	// Example: string
	// Max Length: 50
	District string `json:"district,omitempty"`

	// First name of the recipient
	// Example: John
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Last name of the recipient.
	// Example: Doe
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// City of the shipping address.
	//
	// Example: Belfast
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Postal code for the shipping address. The postal code must consist of 5 to 9 digits.
	//
	// Example: BT1 4LS
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this generate unified checkout capture context params body order information ship to
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress4(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBuildingNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDistrict(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) validateAddress1(formats strfmt.Registry) error {
	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"address1", "body", o.Address1, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) validateAddress2(formats strfmt.Registry) error {
	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"address2", "body", o.Address2, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) validateAddress4(formats strfmt.Registry) error {
	if swag.IsZero(o.Address4) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"address4", "body", o.Address4, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) validateAdministrativeArea(formats strfmt.Registry) error {
	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"administrativeArea", "body", o.AdministrativeArea, 2); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) validateBuildingNumber(formats strfmt.Registry) error {
	if swag.IsZero(o.BuildingNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"buildingNumber", "body", o.BuildingNumber, 15); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) validateDistrict(formats strfmt.Registry) error {
	if swag.IsZero(o.District) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"district", "body", o.District, 50); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) validateFirstName(formats strfmt.Registry) error {
	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"firstName", "body", o.FirstName, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) validateLastName(formats strfmt.Registry) error {
	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"lastName", "body", o.LastName, 60); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) validateLocality(formats strfmt.Registry) error {
	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"locality", "body", o.Locality, 50); err != nil {
		return err
	}

	return nil
}

func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) validatePostalCode(formats strfmt.Registry) error {
	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("generateUnifiedCheckoutCaptureContextRequest"+"."+"orderInformation"+"."+"shipTo"+"."+"postalCode", "body", o.PostalCode, 10); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this generate unified checkout capture context params body order information ship to based on context it is used
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo) UnmarshalBinary(b []byte) error {
	var res GenerateUnifiedCheckoutCaptureContextParamsBodyOrderInformationShipTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
