// Code generated by go-swagger; DO NOT EDIT.

package reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetReportByReportIDParams creates a new GetReportByReportIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetReportByReportIDParams() *GetReportByReportIDParams {
	return &GetReportByReportIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetReportByReportIDParamsWithTimeout creates a new GetReportByReportIDParams object
// with the ability to set a timeout on a request.
func NewGetReportByReportIDParamsWithTimeout(timeout time.Duration) *GetReportByReportIDParams {
	return &GetReportByReportIDParams{
		timeout: timeout,
	}
}

// NewGetReportByReportIDParamsWithContext creates a new GetReportByReportIDParams object
// with the ability to set a context for a request.
func NewGetReportByReportIDParamsWithContext(ctx context.Context) *GetReportByReportIDParams {
	return &GetReportByReportIDParams{
		Context: ctx,
	}
}

// NewGetReportByReportIDParamsWithHTTPClient creates a new GetReportByReportIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetReportByReportIDParamsWithHTTPClient(client *http.Client) *GetReportByReportIDParams {
	return &GetReportByReportIDParams{
		HTTPClient: client,
	}
}

/*
GetReportByReportIDParams contains all the parameters to send to the API endpoint

	for the get report by report Id operation.

	Typically these are written to a http.Request.
*/
type GetReportByReportIDParams struct {

	/* OrganizationID.

	   Valid Organization Id
	*/
	OrganizationID *string

	/* ReportID.

	   Valid Report Id
	*/
	ReportID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get report by report Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetReportByReportIDParams) WithDefaults() *GetReportByReportIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get report by report Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetReportByReportIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get report by report Id params
func (o *GetReportByReportIDParams) WithTimeout(timeout time.Duration) *GetReportByReportIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get report by report Id params
func (o *GetReportByReportIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get report by report Id params
func (o *GetReportByReportIDParams) WithContext(ctx context.Context) *GetReportByReportIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get report by report Id params
func (o *GetReportByReportIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get report by report Id params
func (o *GetReportByReportIDParams) WithHTTPClient(client *http.Client) *GetReportByReportIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get report by report Id params
func (o *GetReportByReportIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrganizationID adds the organizationID to the get report by report Id params
func (o *GetReportByReportIDParams) WithOrganizationID(organizationID *string) *GetReportByReportIDParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the get report by report Id params
func (o *GetReportByReportIDParams) SetOrganizationID(organizationID *string) {
	o.OrganizationID = organizationID
}

// WithReportID adds the reportID to the get report by report Id params
func (o *GetReportByReportIDParams) WithReportID(reportID string) *GetReportByReportIDParams {
	o.SetReportID(reportID)
	return o
}

// SetReportID adds the reportId to the get report by report Id params
func (o *GetReportByReportIDParams) SetReportID(reportID string) {
	o.ReportID = reportID
}

// WriteToRequest writes these params to a swagger request
func (o *GetReportByReportIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.OrganizationID != nil {

		// query param organizationId
		var qrOrganizationID string

		if o.OrganizationID != nil {
			qrOrganizationID = *o.OrganizationID
		}
		qOrganizationID := qrOrganizationID
		if qOrganizationID != "" {

			if err := r.SetQueryParam("organizationId", qOrganizationID); err != nil {
				return err
			}
		}
	}

	// path param reportId
	if err := r.SetPathParam("reportId", o.ReportID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
