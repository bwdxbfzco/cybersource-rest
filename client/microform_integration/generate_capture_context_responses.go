// Code generated by go-swagger; DO NOT EDIT.

package microform_integration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GenerateCaptureContextReader is a Reader for the GenerateCaptureContext structure.
type GenerateCaptureContextReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GenerateCaptureContextReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewGenerateCaptureContextCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGenerateCaptureContextDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGenerateCaptureContextCreated creates a GenerateCaptureContextCreated with default headers values
func NewGenerateCaptureContextCreated() *GenerateCaptureContextCreated {
	return &GenerateCaptureContextCreated{}
}

/*
GenerateCaptureContextCreated describes a response with status code 201, with default header values.

Capture Context Created
*/
type GenerateCaptureContextCreated struct {
	Payload string
}

// IsSuccess returns true when this generate capture context created response has a 2xx status code
func (o *GenerateCaptureContextCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this generate capture context created response has a 3xx status code
func (o *GenerateCaptureContextCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate capture context created response has a 4xx status code
func (o *GenerateCaptureContextCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this generate capture context created response has a 5xx status code
func (o *GenerateCaptureContextCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this generate capture context created response a status code equal to that given
func (o *GenerateCaptureContextCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the generate capture context created response
func (o *GenerateCaptureContextCreated) Code() int {
	return 201
}

func (o *GenerateCaptureContextCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /microform/v2/sessions][%d] generateCaptureContextCreated %s", 201, payload)
}

func (o *GenerateCaptureContextCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /microform/v2/sessions][%d] generateCaptureContextCreated %s", 201, payload)
}

func (o *GenerateCaptureContextCreated) GetPayload() string {
	return o.Payload
}

func (o *GenerateCaptureContextCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateCaptureContextDefault creates a GenerateCaptureContextDefault with default headers values
func NewGenerateCaptureContextDefault(code int) *GenerateCaptureContextDefault {
	return &GenerateCaptureContextDefault{
		_statusCode: code,
	}
}

/*
GenerateCaptureContextDefault describes a response with status code -1, with default header values.

Error retrieving key.
*/
type GenerateCaptureContextDefault struct {
	_statusCode int

	Payload *GenerateCaptureContextDefaultBody
}

// IsSuccess returns true when this generate capture context default response has a 2xx status code
func (o *GenerateCaptureContextDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this generate capture context default response has a 3xx status code
func (o *GenerateCaptureContextDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this generate capture context default response has a 4xx status code
func (o *GenerateCaptureContextDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this generate capture context default response has a 5xx status code
func (o *GenerateCaptureContextDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this generate capture context default response a status code equal to that given
func (o *GenerateCaptureContextDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the generate capture context default response
func (o *GenerateCaptureContextDefault) Code() int {
	return o._statusCode
}

func (o *GenerateCaptureContextDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /microform/v2/sessions][%d] generateCaptureContext default %s", o._statusCode, payload)
}

func (o *GenerateCaptureContextDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /microform/v2/sessions][%d] generateCaptureContext default %s", o._statusCode, payload)
}

func (o *GenerateCaptureContextDefault) GetPayload() *GenerateCaptureContextDefaultBody {
	return o.Payload
}

func (o *GenerateCaptureContextDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GenerateCaptureContextDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GenerateCaptureContextBody This is a server-to-server API request to generate the capture context that can be used to initiate instance of microform on a acceptance page.   The capture context is a digitally signed JWT that provides authentication, one-time keys, and the target origin to the Microform Integration application.
swagger:model GenerateCaptureContextBody
*/
type GenerateCaptureContextBody struct {

	// allowed card networks
	// Example: ["VISA","MAESTRO","MASTERCARD","AMEX","DISCOVER","DINERSCLUB","JCB","CUP","CARTESBANCAIRES"]
	AllowedCardNetworks []string `json:"allowedCardNetworks"`

	// checkout Api initialization
	CheckoutAPIInitialization *GenerateCaptureContextParamsBodyCheckoutAPIInitialization `json:"checkoutApiInitialization,omitempty"`

	// client version
	// Example: v2.0
	ClientVersion string `json:"clientVersion,omitempty"`

	// The merchant origin domain (e.g. https://example.com) used to initiate microform Integration. Required to comply with CORS and CSP standards.
	TargetOrigins []string `json:"targetOrigins"`
}

// Validate validates this generate capture context body
func (o *GenerateCaptureContextBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCheckoutAPIInitialization(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateCaptureContextBody) validateCheckoutAPIInitialization(formats strfmt.Registry) error {
	if swag.IsZero(o.CheckoutAPIInitialization) { // not required
		return nil
	}

	if o.CheckoutAPIInitialization != nil {
		if err := o.CheckoutAPIInitialization.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateCaptureContextRequest" + "." + "checkoutApiInitialization")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateCaptureContextRequest" + "." + "checkoutApiInitialization")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this generate capture context body based on the context it is used
func (o *GenerateCaptureContextBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCheckoutAPIInitialization(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateCaptureContextBody) contextValidateCheckoutAPIInitialization(ctx context.Context, formats strfmt.Registry) error {

	if o.CheckoutAPIInitialization != nil {

		if swag.IsZero(o.CheckoutAPIInitialization) { // not required
			return nil
		}

		if err := o.CheckoutAPIInitialization.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateCaptureContextRequest" + "." + "checkoutApiInitialization")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateCaptureContextRequest" + "." + "checkoutApiInitialization")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GenerateCaptureContextBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateCaptureContextBody) UnmarshalBinary(b []byte) error {
	var res GenerateCaptureContextBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateCaptureContextDefaultBody generate capture context default body
swagger:model GenerateCaptureContextDefaultBody
*/
type GenerateCaptureContextDefaultBody struct {

	// links
	Links *GenerateCaptureContextDefaultBodyLinks `json:"_links,omitempty"`

	// response status
	ResponseStatus *GenerateCaptureContextDefaultBodyResponseStatus `json:"responseStatus,omitempty"`
}

// Validate validates this generate capture context default body
func (o *GenerateCaptureContextDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResponseStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateCaptureContextDefaultBody) validateLinks(formats strfmt.Registry) error {
	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateCaptureContext default" + "." + "_links")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateCaptureContext default" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateCaptureContextDefaultBody) validateResponseStatus(formats strfmt.Registry) error {
	if swag.IsZero(o.ResponseStatus) { // not required
		return nil
	}

	if o.ResponseStatus != nil {
		if err := o.ResponseStatus.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateCaptureContext default" + "." + "responseStatus")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateCaptureContext default" + "." + "responseStatus")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this generate capture context default body based on the context it is used
func (o *GenerateCaptureContextDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLinks(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateResponseStatus(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateCaptureContextDefaultBody) contextValidateLinks(ctx context.Context, formats strfmt.Registry) error {

	if o.Links != nil {

		if swag.IsZero(o.Links) { // not required
			return nil
		}

		if err := o.Links.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateCaptureContext default" + "." + "_links")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateCaptureContext default" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *GenerateCaptureContextDefaultBody) contextValidateResponseStatus(ctx context.Context, formats strfmt.Registry) error {

	if o.ResponseStatus != nil {

		if swag.IsZero(o.ResponseStatus) { // not required
			return nil
		}

		if err := o.ResponseStatus.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateCaptureContext default" + "." + "responseStatus")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateCaptureContext default" + "." + "responseStatus")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBody) UnmarshalBinary(b []byte) error {
	var res GenerateCaptureContextDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateCaptureContextDefaultBodyLinks generate capture context default body links
swagger:model GenerateCaptureContextDefaultBodyLinks
*/
type GenerateCaptureContextDefaultBodyLinks struct {

	// documentation
	Documentation []*GenerateCaptureContextDefaultBodyLinksDocumentationItems0 `json:"documentation"`

	// next
	Next []*GenerateCaptureContextDefaultBodyLinksNextItems0 `json:"next"`

	// self
	Self *GenerateCaptureContextDefaultBodyLinksSelf `json:"self,omitempty"`
}

// Validate validates this generate capture context default body links
func (o *GenerateCaptureContextDefaultBodyLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDocumentation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateCaptureContextDefaultBodyLinks) validateDocumentation(formats strfmt.Registry) error {
	if swag.IsZero(o.Documentation) { // not required
		return nil
	}

	for i := 0; i < len(o.Documentation); i++ {
		if swag.IsZero(o.Documentation[i]) { // not required
			continue
		}

		if o.Documentation[i] != nil {
			if err := o.Documentation[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "documentation" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "documentation" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GenerateCaptureContextDefaultBodyLinks) validateNext(formats strfmt.Registry) error {
	if swag.IsZero(o.Next) { // not required
		return nil
	}

	for i := 0; i < len(o.Next); i++ {
		if swag.IsZero(o.Next[i]) { // not required
			continue
		}

		if o.Next[i] != nil {
			if err := o.Next[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "next" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "next" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GenerateCaptureContextDefaultBodyLinks) validateSelf(formats strfmt.Registry) error {
	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "self")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this generate capture context default body links based on the context it is used
func (o *GenerateCaptureContextDefaultBodyLinks) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDocumentation(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateNext(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateSelf(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateCaptureContextDefaultBodyLinks) contextValidateDocumentation(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Documentation); i++ {

		if o.Documentation[i] != nil {

			if swag.IsZero(o.Documentation[i]) { // not required
				return nil
			}

			if err := o.Documentation[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "documentation" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "documentation" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GenerateCaptureContextDefaultBodyLinks) contextValidateNext(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Next); i++ {

		if o.Next[i] != nil {

			if swag.IsZero(o.Next[i]) { // not required
				return nil
			}

			if err := o.Next[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "next" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "next" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GenerateCaptureContextDefaultBodyLinks) contextValidateSelf(ctx context.Context, formats strfmt.Registry) error {

	if o.Self != nil {

		if swag.IsZero(o.Self) { // not required
			return nil
		}

		if err := o.Self.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "self")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("generateCaptureContext default" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyLinks) UnmarshalBinary(b []byte) error {
	var res GenerateCaptureContextDefaultBodyLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateCaptureContextDefaultBodyLinksDocumentationItems0 generate capture context default body links documentation items0
swagger:model GenerateCaptureContextDefaultBodyLinksDocumentationItems0
*/
type GenerateCaptureContextDefaultBodyLinksDocumentationItems0 struct {

	// URI of the linked resource.
	Href string `json:"href,omitempty"`

	// HTTP method of the linked resource.
	Method string `json:"method,omitempty"`

	// Label of the linked resource.
	Title string `json:"title,omitempty"`
}

// Validate validates this generate capture context default body links documentation items0
func (o *GenerateCaptureContextDefaultBodyLinksDocumentationItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this generate capture context default body links documentation items0 based on context it is used
func (o *GenerateCaptureContextDefaultBodyLinksDocumentationItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyLinksDocumentationItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyLinksDocumentationItems0) UnmarshalBinary(b []byte) error {
	var res GenerateCaptureContextDefaultBodyLinksDocumentationItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateCaptureContextDefaultBodyLinksNextItems0 generate capture context default body links next items0
swagger:model GenerateCaptureContextDefaultBodyLinksNextItems0
*/
type GenerateCaptureContextDefaultBodyLinksNextItems0 struct {

	// URI of the linked resource.
	Href string `json:"href,omitempty"`

	// HTTP method of the linked resource.
	Method string `json:"method,omitempty"`

	// Label of the linked resource.
	Title string `json:"title,omitempty"`
}

// Validate validates this generate capture context default body links next items0
func (o *GenerateCaptureContextDefaultBodyLinksNextItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this generate capture context default body links next items0 based on context it is used
func (o *GenerateCaptureContextDefaultBodyLinksNextItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyLinksNextItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyLinksNextItems0) UnmarshalBinary(b []byte) error {
	var res GenerateCaptureContextDefaultBodyLinksNextItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateCaptureContextDefaultBodyLinksSelf generate capture context default body links self
swagger:model GenerateCaptureContextDefaultBodyLinksSelf
*/
type GenerateCaptureContextDefaultBodyLinksSelf struct {

	// URI of the linked resource.
	Href string `json:"href,omitempty"`

	// HTTP method of the linked resource.
	Method string `json:"method,omitempty"`

	// Label of the linked resource.
	Title string `json:"title,omitempty"`
}

// Validate validates this generate capture context default body links self
func (o *GenerateCaptureContextDefaultBodyLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this generate capture context default body links self based on context it is used
func (o *GenerateCaptureContextDefaultBodyLinksSelf) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyLinksSelf) UnmarshalBinary(b []byte) error {
	var res GenerateCaptureContextDefaultBodyLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateCaptureContextDefaultBodyResponseStatus generate capture context default body response status
swagger:model GenerateCaptureContextDefaultBodyResponseStatus
*/
type GenerateCaptureContextDefaultBodyResponseStatus struct {

	// API correlation ID.
	CorrelationID string `json:"correlationId,omitempty"`

	// details
	Details []*GenerateCaptureContextDefaultBodyResponseStatusDetailsItems0 `json:"details"`

	// Error Message.
	Message string `json:"message,omitempty"`

	// Error Reason Code.
	Reason string `json:"reason,omitempty"`

	// HTTP Status code.
	Status float64 `json:"status,omitempty"`
}

// Validate validates this generate capture context default body response status
func (o *GenerateCaptureContextDefaultBodyResponseStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateCaptureContextDefaultBodyResponseStatus) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generateCaptureContext default" + "." + "responseStatus" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("generateCaptureContext default" + "." + "responseStatus" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this generate capture context default body response status based on the context it is used
func (o *GenerateCaptureContextDefaultBodyResponseStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateCaptureContextDefaultBodyResponseStatus) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {

			if swag.IsZero(o.Details[i]) { // not required
				return nil
			}

			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("generateCaptureContext default" + "." + "responseStatus" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("generateCaptureContext default" + "." + "responseStatus" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyResponseStatus) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyResponseStatus) UnmarshalBinary(b []byte) error {
	var res GenerateCaptureContextDefaultBodyResponseStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateCaptureContextDefaultBodyResponseStatusDetailsItems0 generate capture context default body response status details items0
swagger:model GenerateCaptureContextDefaultBodyResponseStatusDetailsItems0
*/
type GenerateCaptureContextDefaultBodyResponseStatusDetailsItems0 struct {

	// Field name referred to for validation issues.
	Location string `json:"location,omitempty"`

	// Description or code of any error response.
	Message string `json:"message,omitempty"`
}

// Validate validates this generate capture context default body response status details items0
func (o *GenerateCaptureContextDefaultBodyResponseStatusDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this generate capture context default body response status details items0 based on context it is used
func (o *GenerateCaptureContextDefaultBodyResponseStatusDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyResponseStatusDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateCaptureContextDefaultBodyResponseStatusDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GenerateCaptureContextDefaultBodyResponseStatusDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GenerateCaptureContextParamsBodyCheckoutAPIInitialization generate capture context params body checkout API initialization
swagger:model GenerateCaptureContextParamsBodyCheckoutAPIInitialization
*/
type GenerateCaptureContextParamsBodyCheckoutAPIInitialization struct {

	// access key
	// Example: acce55acce55acce55acce55acce5500
	AccessKey string `json:"access_key,omitempty"`

	// amount
	// Example: 100
	Amount string `json:"amount,omitempty"`

	// currency
	// Example: USD
	Currency string `json:"currency,omitempty"`

	// locale
	// Example: en-us
	Locale string `json:"locale,omitempty"`

	// override custom receipt page
	// Example: https://www.test.com/recipt
	OverrideCustomReceiptPage string `json:"override_custom_receipt_page,omitempty"`

	// profile id
	// Example: 12341234-1234-1234-1234-123412341234
	ProfileID string `json:"profile_id,omitempty"`

	// reference number
	// Example: 1611305732
	ReferenceNumber string `json:"reference_number,omitempty"`

	// transaction type
	// Example: authorization
	TransactionType string `json:"transaction_type,omitempty"`

	// transaction uuid
	// Example: 1611305732-001
	TransactionUUID string `json:"transaction_uuid,omitempty"`

	// unsigned field names
	// Example: transient_token
	UnsignedFieldNames string `json:"unsigned_field_names,omitempty"`
}

// Validate validates this generate capture context params body checkout API initialization
func (o *GenerateCaptureContextParamsBodyCheckoutAPIInitialization) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this generate capture context params body checkout API initialization based on context it is used
func (o *GenerateCaptureContextParamsBodyCheckoutAPIInitialization) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateCaptureContextParamsBodyCheckoutAPIInitialization) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateCaptureContextParamsBodyCheckoutAPIInitialization) UnmarshalBinary(b []byte) error {
	var res GenerateCaptureContextParamsBodyCheckoutAPIInitialization
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
