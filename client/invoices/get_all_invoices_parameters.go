// Code generated by go-swagger; DO NOT EDIT.

package invoices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAllInvoicesParams creates a new GetAllInvoicesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAllInvoicesParams() *GetAllInvoicesParams {
	return &GetAllInvoicesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAllInvoicesParamsWithTimeout creates a new GetAllInvoicesParams object
// with the ability to set a timeout on a request.
func NewGetAllInvoicesParamsWithTimeout(timeout time.Duration) *GetAllInvoicesParams {
	return &GetAllInvoicesParams{
		timeout: timeout,
	}
}

// NewGetAllInvoicesParamsWithContext creates a new GetAllInvoicesParams object
// with the ability to set a context for a request.
func NewGetAllInvoicesParamsWithContext(ctx context.Context) *GetAllInvoicesParams {
	return &GetAllInvoicesParams{
		Context: ctx,
	}
}

// NewGetAllInvoicesParamsWithHTTPClient creates a new GetAllInvoicesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAllInvoicesParamsWithHTTPClient(client *http.Client) *GetAllInvoicesParams {
	return &GetAllInvoicesParams{
		HTTPClient: client,
	}
}

/*
GetAllInvoicesParams contains all the parameters to send to the API endpoint

	for the get all invoices operation.

	Typically these are written to a http.Request.
*/
type GetAllInvoicesParams struct {

	/* Limit.

	   Maximum number of items you would like returned.
	*/
	Limit int64

	/* Offset.

	   Page offset number.
	*/
	Offset int64

	/* Status.

	     The status of the invoice.

	Possible values:
	  - DRAFT
	  - CREATED
	  - SENT
	  - PARTIAL
	  - PAID
	  - CANCELED

	*/
	Status *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get all invoices params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllInvoicesParams) WithDefaults() *GetAllInvoicesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get all invoices params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllInvoicesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get all invoices params
func (o *GetAllInvoicesParams) WithTimeout(timeout time.Duration) *GetAllInvoicesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get all invoices params
func (o *GetAllInvoicesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get all invoices params
func (o *GetAllInvoicesParams) WithContext(ctx context.Context) *GetAllInvoicesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get all invoices params
func (o *GetAllInvoicesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get all invoices params
func (o *GetAllInvoicesParams) WithHTTPClient(client *http.Client) *GetAllInvoicesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get all invoices params
func (o *GetAllInvoicesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the get all invoices params
func (o *GetAllInvoicesParams) WithLimit(limit int64) *GetAllInvoicesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get all invoices params
func (o *GetAllInvoicesParams) SetLimit(limit int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the get all invoices params
func (o *GetAllInvoicesParams) WithOffset(offset int64) *GetAllInvoicesParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get all invoices params
func (o *GetAllInvoicesParams) SetOffset(offset int64) {
	o.Offset = offset
}

// WithStatus adds the status to the get all invoices params
func (o *GetAllInvoicesParams) WithStatus(status *string) *GetAllInvoicesParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get all invoices params
func (o *GetAllInvoicesParams) SetStatus(status *string) {
	o.Status = status
}

// WriteToRequest writes these params to a swagger request
func (o *GetAllInvoicesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param limit
	qrLimit := o.Limit
	qLimit := swag.FormatInt64(qrLimit)
	if qLimit != "" {

		if err := r.SetQueryParam("limit", qLimit); err != nil {
			return err
		}
	}

	// query param offset
	qrOffset := o.Offset
	qOffset := swag.FormatInt64(qrOffset)
	if qOffset != "" {

		if err := r.SetQueryParam("offset", qOffset); err != nil {
			return err
		}
	}

	if o.Status != nil {

		// query param status
		var qrStatus string

		if o.Status != nil {
			qrStatus = *o.Status
		}
		qStatus := qrStatus
		if qStatus != "" {

			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
