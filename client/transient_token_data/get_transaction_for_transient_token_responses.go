// Code generated by go-swagger; DO NOT EDIT.

package transient_token_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetTransactionForTransientTokenReader is a Reader for the GetTransactionForTransientToken structure.
type GetTransactionForTransientTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTransactionForTransientTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTransactionForTransientTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTransactionForTransientTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTransactionForTransientTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /up/v1/payment-details/{transientToken}] getTransactionForTransientToken", response, response.Code())
	}
}

// NewGetTransactionForTransientTokenOK creates a GetTransactionForTransientTokenOK with default headers values
func NewGetTransactionForTransientTokenOK() *GetTransactionForTransientTokenOK {
	return &GetTransactionForTransientTokenOK{}
}

/*
GetTransactionForTransientTokenOK describes a response with status code 200, with default header values.

Successful response.
*/
type GetTransactionForTransientTokenOK struct {
}

// IsSuccess returns true when this get transaction for transient token o k response has a 2xx status code
func (o *GetTransactionForTransientTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get transaction for transient token o k response has a 3xx status code
func (o *GetTransactionForTransientTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get transaction for transient token o k response has a 4xx status code
func (o *GetTransactionForTransientTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get transaction for transient token o k response has a 5xx status code
func (o *GetTransactionForTransientTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get transaction for transient token o k response a status code equal to that given
func (o *GetTransactionForTransientTokenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get transaction for transient token o k response
func (o *GetTransactionForTransientTokenOK) Code() int {
	return 200
}

func (o *GetTransactionForTransientTokenOK) Error() string {
	return fmt.Sprintf("[GET /up/v1/payment-details/{transientToken}][%d] getTransactionForTransientTokenOK", 200)
}

func (o *GetTransactionForTransientTokenOK) String() string {
	return fmt.Sprintf("[GET /up/v1/payment-details/{transientToken}][%d] getTransactionForTransientTokenOK", 200)
}

func (o *GetTransactionForTransientTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTransactionForTransientTokenNotFound creates a GetTransactionForTransientTokenNotFound with default headers values
func NewGetTransactionForTransientTokenNotFound() *GetTransactionForTransientTokenNotFound {
	return &GetTransactionForTransientTokenNotFound{}
}

/*
GetTransactionForTransientTokenNotFound describes a response with status code 404, with default header values.

The specified resource not found in the system.
*/
type GetTransactionForTransientTokenNotFound struct {
}

// IsSuccess returns true when this get transaction for transient token not found response has a 2xx status code
func (o *GetTransactionForTransientTokenNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get transaction for transient token not found response has a 3xx status code
func (o *GetTransactionForTransientTokenNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get transaction for transient token not found response has a 4xx status code
func (o *GetTransactionForTransientTokenNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get transaction for transient token not found response has a 5xx status code
func (o *GetTransactionForTransientTokenNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get transaction for transient token not found response a status code equal to that given
func (o *GetTransactionForTransientTokenNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get transaction for transient token not found response
func (o *GetTransactionForTransientTokenNotFound) Code() int {
	return 404
}

func (o *GetTransactionForTransientTokenNotFound) Error() string {
	return fmt.Sprintf("[GET /up/v1/payment-details/{transientToken}][%d] getTransactionForTransientTokenNotFound", 404)
}

func (o *GetTransactionForTransientTokenNotFound) String() string {
	return fmt.Sprintf("[GET /up/v1/payment-details/{transientToken}][%d] getTransactionForTransientTokenNotFound", 404)
}

func (o *GetTransactionForTransientTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTransactionForTransientTokenInternalServerError creates a GetTransactionForTransientTokenInternalServerError with default headers values
func NewGetTransactionForTransientTokenInternalServerError() *GetTransactionForTransientTokenInternalServerError {
	return &GetTransactionForTransientTokenInternalServerError{}
}

/*
GetTransactionForTransientTokenInternalServerError describes a response with status code 500, with default header values.

Unexpected server error
*/
type GetTransactionForTransientTokenInternalServerError struct {
}

// IsSuccess returns true when this get transaction for transient token internal server error response has a 2xx status code
func (o *GetTransactionForTransientTokenInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get transaction for transient token internal server error response has a 3xx status code
func (o *GetTransactionForTransientTokenInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get transaction for transient token internal server error response has a 4xx status code
func (o *GetTransactionForTransientTokenInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get transaction for transient token internal server error response has a 5xx status code
func (o *GetTransactionForTransientTokenInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get transaction for transient token internal server error response a status code equal to that given
func (o *GetTransactionForTransientTokenInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get transaction for transient token internal server error response
func (o *GetTransactionForTransientTokenInternalServerError) Code() int {
	return 500
}

func (o *GetTransactionForTransientTokenInternalServerError) Error() string {
	return fmt.Sprintf("[GET /up/v1/payment-details/{transientToken}][%d] getTransactionForTransientTokenInternalServerError", 500)
}

func (o *GetTransactionForTransientTokenInternalServerError) String() string {
	return fmt.Sprintf("[GET /up/v1/payment-details/{transientToken}][%d] getTransactionForTransientTokenInternalServerError", 500)
}

func (o *GetTransactionForTransientTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
