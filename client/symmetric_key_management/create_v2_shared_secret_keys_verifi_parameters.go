// Code generated by go-swagger; DO NOT EDIT.

package symmetric_key_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateV2SharedSecretKeysVerifiParams creates a new CreateV2SharedSecretKeysVerifiParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateV2SharedSecretKeysVerifiParams() *CreateV2SharedSecretKeysVerifiParams {
	return &CreateV2SharedSecretKeysVerifiParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateV2SharedSecretKeysVerifiParamsWithTimeout creates a new CreateV2SharedSecretKeysVerifiParams object
// with the ability to set a timeout on a request.
func NewCreateV2SharedSecretKeysVerifiParamsWithTimeout(timeout time.Duration) *CreateV2SharedSecretKeysVerifiParams {
	return &CreateV2SharedSecretKeysVerifiParams{
		timeout: timeout,
	}
}

// NewCreateV2SharedSecretKeysVerifiParamsWithContext creates a new CreateV2SharedSecretKeysVerifiParams object
// with the ability to set a context for a request.
func NewCreateV2SharedSecretKeysVerifiParamsWithContext(ctx context.Context) *CreateV2SharedSecretKeysVerifiParams {
	return &CreateV2SharedSecretKeysVerifiParams{
		Context: ctx,
	}
}

// NewCreateV2SharedSecretKeysVerifiParamsWithHTTPClient creates a new CreateV2SharedSecretKeysVerifiParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateV2SharedSecretKeysVerifiParamsWithHTTPClient(client *http.Client) *CreateV2SharedSecretKeysVerifiParams {
	return &CreateV2SharedSecretKeysVerifiParams{
		HTTPClient: client,
	}
}

/*
CreateV2SharedSecretKeysVerifiParams contains all the parameters to send to the API endpoint

	for the create v2 shared secret keys verifi operation.

	Typically these are written to a http.Request.
*/
type CreateV2SharedSecretKeysVerifiParams struct {

	// CreateSharedSecretKeysVerifiRequest.
	CreateSharedSecretKeysVerifiRequest CreateV2SharedSecretKeysVerifiBody

	/* VIcDomain.

	   domain
	*/
	VIcDomain string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create v2 shared secret keys verifi params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateV2SharedSecretKeysVerifiParams) WithDefaults() *CreateV2SharedSecretKeysVerifiParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create v2 shared secret keys verifi params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateV2SharedSecretKeysVerifiParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create v2 shared secret keys verifi params
func (o *CreateV2SharedSecretKeysVerifiParams) WithTimeout(timeout time.Duration) *CreateV2SharedSecretKeysVerifiParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create v2 shared secret keys verifi params
func (o *CreateV2SharedSecretKeysVerifiParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create v2 shared secret keys verifi params
func (o *CreateV2SharedSecretKeysVerifiParams) WithContext(ctx context.Context) *CreateV2SharedSecretKeysVerifiParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create v2 shared secret keys verifi params
func (o *CreateV2SharedSecretKeysVerifiParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create v2 shared secret keys verifi params
func (o *CreateV2SharedSecretKeysVerifiParams) WithHTTPClient(client *http.Client) *CreateV2SharedSecretKeysVerifiParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create v2 shared secret keys verifi params
func (o *CreateV2SharedSecretKeysVerifiParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateSharedSecretKeysVerifiRequest adds the createSharedSecretKeysVerifiRequest to the create v2 shared secret keys verifi params
func (o *CreateV2SharedSecretKeysVerifiParams) WithCreateSharedSecretKeysVerifiRequest(createSharedSecretKeysVerifiRequest CreateV2SharedSecretKeysVerifiBody) *CreateV2SharedSecretKeysVerifiParams {
	o.SetCreateSharedSecretKeysVerifiRequest(createSharedSecretKeysVerifiRequest)
	return o
}

// SetCreateSharedSecretKeysVerifiRequest adds the createSharedSecretKeysVerifiRequest to the create v2 shared secret keys verifi params
func (o *CreateV2SharedSecretKeysVerifiParams) SetCreateSharedSecretKeysVerifiRequest(createSharedSecretKeysVerifiRequest CreateV2SharedSecretKeysVerifiBody) {
	o.CreateSharedSecretKeysVerifiRequest = createSharedSecretKeysVerifiRequest
}

// WithVIcDomain adds the vIcDomain to the create v2 shared secret keys verifi params
func (o *CreateV2SharedSecretKeysVerifiParams) WithVIcDomain(vIcDomain string) *CreateV2SharedSecretKeysVerifiParams {
	o.SetVIcDomain(vIcDomain)
	return o
}

// SetVIcDomain adds the vIcDomain to the create v2 shared secret keys verifi params
func (o *CreateV2SharedSecretKeysVerifiParams) SetVIcDomain(vIcDomain string) {
	o.VIcDomain = vIcDomain
}

// WriteToRequest writes these params to a swagger request
func (o *CreateV2SharedSecretKeysVerifiParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if err := r.SetBodyParam(o.CreateSharedSecretKeysVerifiRequest); err != nil {
		return err
	}

	// header param v-ic-domain
	if err := r.SetHeaderParam("v-ic-domain", o.VIcDomain); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
