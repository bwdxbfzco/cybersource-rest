// Code generated by go-swagger; DO NOT EDIT.

package chargeback_summaries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetChargebackSummariesReader is a Reader for the GetChargebackSummaries structure.
type GetChargebackSummariesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChargebackSummariesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChargebackSummariesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /reporting/v3/chargeback-summaries] getChargebackSummaries", response, response.Code())
	}
}

// NewGetChargebackSummariesOK creates a GetChargebackSummariesOK with default headers values
func NewGetChargebackSummariesOK() *GetChargebackSummariesOK {
	return &GetChargebackSummariesOK{}
}

/*
GetChargebackSummariesOK describes a response with status code 200, with default header values.

Ok
*/
type GetChargebackSummariesOK struct {
	Payload *GetChargebackSummariesOKBody
}

// IsSuccess returns true when this get chargeback summaries o k response has a 2xx status code
func (o *GetChargebackSummariesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chargeback summaries o k response has a 3xx status code
func (o *GetChargebackSummariesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chargeback summaries o k response has a 4xx status code
func (o *GetChargebackSummariesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chargeback summaries o k response has a 5xx status code
func (o *GetChargebackSummariesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chargeback summaries o k response a status code equal to that given
func (o *GetChargebackSummariesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get chargeback summaries o k response
func (o *GetChargebackSummariesOK) Code() int {
	return 200
}

func (o *GetChargebackSummariesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /reporting/v3/chargeback-summaries][%d] getChargebackSummariesOK %s", 200, payload)
}

func (o *GetChargebackSummariesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /reporting/v3/chargeback-summaries][%d] getChargebackSummariesOK %s", 200, payload)
}

func (o *GetChargebackSummariesOK) GetPayload() *GetChargebackSummariesOKBody {
	return o.Payload
}

func (o *GetChargebackSummariesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChargebackSummariesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetChargebackSummariesOKBody reportingV3ChargebackSummariesGet200Response
swagger:model GetChargebackSummariesOKBody
*/
type GetChargebackSummariesOKBody struct {

	// List of Summary values
	ChargebackSummaries []*GetChargebackSummariesOKBodyChargebackSummariesItems0 `json:"chargebackSummaries"`

	// Report Start Date
	// Example: 2017-10-01T10:10:10+05:00
	EndTime string `json:"endTime,omitempty" xml:"ReportEndDate,attr,omitempty"`

	// Organization Id
	// Example: testrest
	OrganizationID string `json:"organizationId,omitempty" xml:"MerchantId,attr,omitempty"`

	// Report Start Date
	// Example: 2017-10-01T10:10:10+05:00
	// Format: date-time
	StartTime strfmt.DateTime `json:"startTime,omitempty" xml:"ReportStartDate,attr,omitempty"`
}

// Validate validates this get chargeback summaries o k body
func (o *GetChargebackSummariesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateChargebackSummaries(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChargebackSummariesOKBody) validateChargebackSummaries(formats strfmt.Registry) error {
	if swag.IsZero(o.ChargebackSummaries) { // not required
		return nil
	}

	for i := 0; i < len(o.ChargebackSummaries); i++ {
		if swag.IsZero(o.ChargebackSummaries[i]) { // not required
			continue
		}

		if o.ChargebackSummaries[i] != nil {
			if err := o.ChargebackSummaries[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getChargebackSummariesOK" + "." + "chargebackSummaries" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getChargebackSummariesOK" + "." + "chargebackSummaries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetChargebackSummariesOKBody) validateStartTime(formats strfmt.Registry) error {
	if swag.IsZero(o.StartTime) { // not required
		return nil
	}

	if err := validate.FormatOf("getChargebackSummariesOK"+"."+"startTime", "body", "date-time", o.StartTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get chargeback summaries o k body based on the context it is used
func (o *GetChargebackSummariesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateChargebackSummaries(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChargebackSummariesOKBody) contextValidateChargebackSummaries(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.ChargebackSummaries); i++ {

		if o.ChargebackSummaries[i] != nil {

			if swag.IsZero(o.ChargebackSummaries[i]) { // not required
				return nil
			}

			if err := o.ChargebackSummaries[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getChargebackSummariesOK" + "." + "chargebackSummaries" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getChargebackSummariesOK" + "." + "chargebackSummaries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetChargebackSummariesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChargebackSummariesOKBody) UnmarshalBinary(b []byte) error {
	var res GetChargebackSummariesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetChargebackSummariesOKBodyChargebackSummariesItems0 get chargeback summaries o k body chargeback summaries items0
swagger:model GetChargebackSummariesOKBodyChargebackSummariesItems0
*/
type GetChargebackSummariesOKBodyChargebackSummariesItems0 struct {

	// Account Id
	// Example: testrest_acct
	AccountID string `json:"accountId,omitempty"`

	// Chargeback summary list count
	// Example: 8
	Count float64 `json:"count,omitempty"`

	// Summary Date
	// Example: 2018-01-04T11:33:06.000-0800
	// Format: date-time
	Time strfmt.DateTime `json:"time,omitempty"`
}

// Validate validates this get chargeback summaries o k body chargeback summaries items0
func (o *GetChargebackSummariesOKBodyChargebackSummariesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChargebackSummariesOKBodyChargebackSummariesItems0) validateTime(formats strfmt.Registry) error {
	if swag.IsZero(o.Time) { // not required
		return nil
	}

	if err := validate.FormatOf("time", "body", "date-time", o.Time.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get chargeback summaries o k body chargeback summaries items0 based on context it is used
func (o *GetChargebackSummariesOKBodyChargebackSummariesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChargebackSummariesOKBodyChargebackSummariesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChargebackSummariesOKBodyChargebackSummariesItems0) UnmarshalBinary(b []byte) error {
	var res GetChargebackSummariesOKBodyChargebackSummariesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
