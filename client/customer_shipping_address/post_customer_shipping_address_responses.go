// Code generated by go-swagger; DO NOT EDIT.

package customer_shipping_address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostCustomerShippingAddressReader is a Reader for the PostCustomerShippingAddress structure.
type PostCustomerShippingAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCustomerShippingAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostCustomerShippingAddressCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCustomerShippingAddressBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostCustomerShippingAddressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostCustomerShippingAddressConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 424:
		result := NewPostCustomerShippingAddressFailedDependency()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostCustomerShippingAddressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /tms/v2/customers/{customerId}/shipping-addresses] postCustomerShippingAddress", response, response.Code())
	}
}

// NewPostCustomerShippingAddressCreated creates a PostCustomerShippingAddressCreated with default headers values
func NewPostCustomerShippingAddressCreated() *PostCustomerShippingAddressCreated {
	return &PostCustomerShippingAddressCreated{}
}

/*
PostCustomerShippingAddressCreated describes a response with status code 201, with default header values.

A new Shipping Address has been created.
*/
type PostCustomerShippingAddressCreated struct {

	/* An ETag is an identifier assigned to a specific version of a resource.
	 */
	ETag string

	/* Location of the Shipping Address.
	 */
	Location string

	/* A globally-unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerShippingAddressCreatedBody
}

// IsSuccess returns true when this post customer shipping address created response has a 2xx status code
func (o *PostCustomerShippingAddressCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post customer shipping address created response has a 3xx status code
func (o *PostCustomerShippingAddressCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post customer shipping address created response has a 4xx status code
func (o *PostCustomerShippingAddressCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post customer shipping address created response has a 5xx status code
func (o *PostCustomerShippingAddressCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post customer shipping address created response a status code equal to that given
func (o *PostCustomerShippingAddressCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post customer shipping address created response
func (o *PostCustomerShippingAddressCreated) Code() int {
	return 201
}

func (o *PostCustomerShippingAddressCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressCreated %s", 201, payload)
}

func (o *PostCustomerShippingAddressCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressCreated %s", 201, payload)
}

func (o *PostCustomerShippingAddressCreated) GetPayload() *PostCustomerShippingAddressCreatedBody {
	return o.Payload
}

func (o *PostCustomerShippingAddressCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Location
	hdrLocation := response.GetHeader("Location")

	if hdrLocation != "" {
		o.Location = hdrLocation
	}

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(PostCustomerShippingAddressCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCustomerShippingAddressBadRequest creates a PostCustomerShippingAddressBadRequest with default headers values
func NewPostCustomerShippingAddressBadRequest() *PostCustomerShippingAddressBadRequest {
	return &PostCustomerShippingAddressBadRequest{}
}

/*
PostCustomerShippingAddressBadRequest describes a response with status code 400, with default header values.

Bad Request: e.g. A required header value could be missing.
*/
type PostCustomerShippingAddressBadRequest struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerShippingAddressBadRequestBody
}

// IsSuccess returns true when this post customer shipping address bad request response has a 2xx status code
func (o *PostCustomerShippingAddressBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post customer shipping address bad request response has a 3xx status code
func (o *PostCustomerShippingAddressBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post customer shipping address bad request response has a 4xx status code
func (o *PostCustomerShippingAddressBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post customer shipping address bad request response has a 5xx status code
func (o *PostCustomerShippingAddressBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post customer shipping address bad request response a status code equal to that given
func (o *PostCustomerShippingAddressBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post customer shipping address bad request response
func (o *PostCustomerShippingAddressBadRequest) Code() int {
	return 400
}

func (o *PostCustomerShippingAddressBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressBadRequest %s", 400, payload)
}

func (o *PostCustomerShippingAddressBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressBadRequest %s", 400, payload)
}

func (o *PostCustomerShippingAddressBadRequest) GetPayload() *PostCustomerShippingAddressBadRequestBody {
	return o.Payload
}

func (o *PostCustomerShippingAddressBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(PostCustomerShippingAddressBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCustomerShippingAddressForbidden creates a PostCustomerShippingAddressForbidden with default headers values
func NewPostCustomerShippingAddressForbidden() *PostCustomerShippingAddressForbidden {
	return &PostCustomerShippingAddressForbidden{}
}

/*
PostCustomerShippingAddressForbidden describes a response with status code 403, with default header values.

Forbidden: e.g. The profile might not have permission to perform the operation.
*/
type PostCustomerShippingAddressForbidden struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerShippingAddressForbiddenBody
}

// IsSuccess returns true when this post customer shipping address forbidden response has a 2xx status code
func (o *PostCustomerShippingAddressForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post customer shipping address forbidden response has a 3xx status code
func (o *PostCustomerShippingAddressForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post customer shipping address forbidden response has a 4xx status code
func (o *PostCustomerShippingAddressForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post customer shipping address forbidden response has a 5xx status code
func (o *PostCustomerShippingAddressForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post customer shipping address forbidden response a status code equal to that given
func (o *PostCustomerShippingAddressForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post customer shipping address forbidden response
func (o *PostCustomerShippingAddressForbidden) Code() int {
	return 403
}

func (o *PostCustomerShippingAddressForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressForbidden %s", 403, payload)
}

func (o *PostCustomerShippingAddressForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressForbidden %s", 403, payload)
}

func (o *PostCustomerShippingAddressForbidden) GetPayload() *PostCustomerShippingAddressForbiddenBody {
	return o.Payload
}

func (o *PostCustomerShippingAddressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(PostCustomerShippingAddressForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCustomerShippingAddressConflict creates a PostCustomerShippingAddressConflict with default headers values
func NewPostCustomerShippingAddressConflict() *PostCustomerShippingAddressConflict {
	return &PostCustomerShippingAddressConflict{}
}

/*
PostCustomerShippingAddressConflict describes a response with status code 409, with default header values.

Conflict. The token is linked to a Payment Instrument.
*/
type PostCustomerShippingAddressConflict struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerShippingAddressConflictBody
}

// IsSuccess returns true when this post customer shipping address conflict response has a 2xx status code
func (o *PostCustomerShippingAddressConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post customer shipping address conflict response has a 3xx status code
func (o *PostCustomerShippingAddressConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post customer shipping address conflict response has a 4xx status code
func (o *PostCustomerShippingAddressConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post customer shipping address conflict response has a 5xx status code
func (o *PostCustomerShippingAddressConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post customer shipping address conflict response a status code equal to that given
func (o *PostCustomerShippingAddressConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the post customer shipping address conflict response
func (o *PostCustomerShippingAddressConflict) Code() int {
	return 409
}

func (o *PostCustomerShippingAddressConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressConflict %s", 409, payload)
}

func (o *PostCustomerShippingAddressConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressConflict %s", 409, payload)
}

func (o *PostCustomerShippingAddressConflict) GetPayload() *PostCustomerShippingAddressConflictBody {
	return o.Payload
}

func (o *PostCustomerShippingAddressConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(PostCustomerShippingAddressConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCustomerShippingAddressFailedDependency creates a PostCustomerShippingAddressFailedDependency with default headers values
func NewPostCustomerShippingAddressFailedDependency() *PostCustomerShippingAddressFailedDependency {
	return &PostCustomerShippingAddressFailedDependency{}
}

/*
PostCustomerShippingAddressFailedDependency describes a response with status code 424, with default header values.

Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.
*/
type PostCustomerShippingAddressFailedDependency struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerShippingAddressFailedDependencyBody
}

// IsSuccess returns true when this post customer shipping address failed dependency response has a 2xx status code
func (o *PostCustomerShippingAddressFailedDependency) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post customer shipping address failed dependency response has a 3xx status code
func (o *PostCustomerShippingAddressFailedDependency) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post customer shipping address failed dependency response has a 4xx status code
func (o *PostCustomerShippingAddressFailedDependency) IsClientError() bool {
	return true
}

// IsServerError returns true when this post customer shipping address failed dependency response has a 5xx status code
func (o *PostCustomerShippingAddressFailedDependency) IsServerError() bool {
	return false
}

// IsCode returns true when this post customer shipping address failed dependency response a status code equal to that given
func (o *PostCustomerShippingAddressFailedDependency) IsCode(code int) bool {
	return code == 424
}

// Code gets the status code for the post customer shipping address failed dependency response
func (o *PostCustomerShippingAddressFailedDependency) Code() int {
	return 424
}

func (o *PostCustomerShippingAddressFailedDependency) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressFailedDependency %s", 424, payload)
}

func (o *PostCustomerShippingAddressFailedDependency) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressFailedDependency %s", 424, payload)
}

func (o *PostCustomerShippingAddressFailedDependency) GetPayload() *PostCustomerShippingAddressFailedDependencyBody {
	return o.Payload
}

func (o *PostCustomerShippingAddressFailedDependency) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(PostCustomerShippingAddressFailedDependencyBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCustomerShippingAddressInternalServerError creates a PostCustomerShippingAddressInternalServerError with default headers values
func NewPostCustomerShippingAddressInternalServerError() *PostCustomerShippingAddressInternalServerError {
	return &PostCustomerShippingAddressInternalServerError{}
}

/*
PostCustomerShippingAddressInternalServerError describes a response with status code 500, with default header values.

Unexpected error.
*/
type PostCustomerShippingAddressInternalServerError struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerShippingAddressInternalServerErrorBody
}

// IsSuccess returns true when this post customer shipping address internal server error response has a 2xx status code
func (o *PostCustomerShippingAddressInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post customer shipping address internal server error response has a 3xx status code
func (o *PostCustomerShippingAddressInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post customer shipping address internal server error response has a 4xx status code
func (o *PostCustomerShippingAddressInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post customer shipping address internal server error response has a 5xx status code
func (o *PostCustomerShippingAddressInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post customer shipping address internal server error response a status code equal to that given
func (o *PostCustomerShippingAddressInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post customer shipping address internal server error response
func (o *PostCustomerShippingAddressInternalServerError) Code() int {
	return 500
}

func (o *PostCustomerShippingAddressInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressInternalServerError %s", 500, payload)
}

func (o *PostCustomerShippingAddressInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tms/v2/customers/{customerId}/shipping-addresses][%d] postCustomerShippingAddressInternalServerError %s", 500, payload)
}

func (o *PostCustomerShippingAddressInternalServerError) GetPayload() *PostCustomerShippingAddressInternalServerErrorBody {
	return o.Payload
}

func (o *PostCustomerShippingAddressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(PostCustomerShippingAddressInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostCustomerShippingAddressBadRequestBody post customer shipping address bad request body
swagger:model PostCustomerShippingAddressBadRequestBody
*/
type PostCustomerShippingAddressBadRequestBody struct {

	// errors
	// Read Only: true
	Errors []*PostCustomerShippingAddressBadRequestBodyErrorsItems0 `json:"errors"`
}

// Validate validates this post customer shipping address bad request body
func (o *PostCustomerShippingAddressBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressBadRequestBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerShippingAddressBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("postCustomerShippingAddressBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this post customer shipping address bad request body based on the context it is used
func (o *PostCustomerShippingAddressBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressBadRequestBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressBadRequest"+"."+"errors", "body", []*PostCustomerShippingAddressBadRequestBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerShippingAddressBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("postCustomerShippingAddressBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressBadRequestBodyErrorsItems0 post customer shipping address bad request body errors items0
swagger:model PostCustomerShippingAddressBadRequestBodyErrorsItems0
*/
type PostCustomerShippingAddressBadRequestBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - invalidHeaders
	//   - missingHeaders
	//   - invalidFields
	//   - missingFields
	//   - unsupportedPaymentMethodModification
	//   - invalidCombination
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer shipping address bad request body errors items0
func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this post customer shipping address bad request body errors items0 based on the context it is used
func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "details", "body", []*PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0(o.Details)); err != nil {
		return err
	}

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {

			if swag.IsZero(o.Details[i]) { // not required
				return nil
			}

			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressBadRequestBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0 post customer shipping address bad request body errors items0 details items0
swagger:model PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0
*/
type PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this post customer shipping address bad request body errors items0 details items0
func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address bad request body errors items0 details items0 based on the context it is used
func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLocation(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0) contextValidateLocation(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "location", "body", string(o.Location)); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0) contextValidateName(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "name", "body", string(o.Name)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressBadRequestBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressBody post customer shipping address body
swagger:model PostCustomerShippingAddressBody
*/
type PostCustomerShippingAddressBody struct {

	// links
	Links *PostCustomerShippingAddressParamsBodyLinks `json:"_links,omitempty"`

	// Flag that indicates whether customer shipping address is the dafault.
	// Possible Values:
	//  - `true`: Shipping Address is customer's default.
	//  - `false`: Shipping Address is not customer's default.
	//
	Default bool `json:"default,omitempty"`

	// The Id of the Shipping Address Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// metadata
	Metadata *PostCustomerShippingAddressParamsBodyMetadata `json:"metadata,omitempty"`

	// ship to
	ShipTo *PostCustomerShippingAddressParamsBodyShipTo `json:"shipTo,omitempty"`
}

// Validate validates this post customer shipping address body
func (o *PostCustomerShippingAddressBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShipTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressBody) validateLinks(formats strfmt.Registry) error {
	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressRequest" + "." + "_links")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressRequest" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressBody) validateID(formats strfmt.Registry) error {
	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerShippingAddressRequest"+"."+"id", "body", o.ID, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"id", "body", o.ID, 32); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressBody) validateMetadata(formats strfmt.Registry) error {
	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressRequest" + "." + "metadata")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressRequest" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressBody) validateShipTo(formats strfmt.Registry) error {
	if swag.IsZero(o.ShipTo) { // not required
		return nil
	}

	if o.ShipTo != nil {
		if err := o.ShipTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressRequest" + "." + "shipTo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressRequest" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post customer shipping address body based on the context it is used
func (o *PostCustomerShippingAddressBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLinks(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMetadata(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateShipTo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressBody) contextValidateLinks(ctx context.Context, formats strfmt.Registry) error {

	if o.Links != nil {

		if swag.IsZero(o.Links) { // not required
			return nil
		}

		if err := o.Links.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressRequest" + "." + "_links")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressRequest" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressBody) contextValidateMetadata(ctx context.Context, formats strfmt.Registry) error {

	if o.Metadata != nil {

		if swag.IsZero(o.Metadata) { // not required
			return nil
		}

		if err := o.Metadata.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressRequest" + "." + "metadata")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressRequest" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressBody) contextValidateShipTo(ctx context.Context, formats strfmt.Registry) error {

	if o.ShipTo != nil {

		if swag.IsZero(o.ShipTo) { // not required
			return nil
		}

		if err := o.ShipTo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressRequest" + "." + "shipTo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressRequest" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressConflictBody post customer shipping address conflict body
swagger:model PostCustomerShippingAddressConflictBody
*/
type PostCustomerShippingAddressConflictBody struct {

	// errors
	// Read Only: true
	Errors []*PostCustomerShippingAddressConflictBodyErrorsItems0 `json:"errors"`
}

// Validate validates this post customer shipping address conflict body
func (o *PostCustomerShippingAddressConflictBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressConflictBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerShippingAddressConflict" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("postCustomerShippingAddressConflict" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this post customer shipping address conflict body based on the context it is used
func (o *PostCustomerShippingAddressConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressConflictBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressConflict"+"."+"errors", "body", []*PostCustomerShippingAddressConflictBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerShippingAddressConflict" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("postCustomerShippingAddressConflict" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressConflictBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressConflictBodyErrorsItems0 post customer shipping address conflict body errors items0
swagger:model PostCustomerShippingAddressConflictBodyErrorsItems0
*/
type PostCustomerShippingAddressConflictBodyErrorsItems0 struct {

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - instrumentIdentifierDeletionError
	//   - tokenIdConflict
	//   - conflict
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer shipping address conflict body errors items0
func (o *PostCustomerShippingAddressConflictBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address conflict body errors items0 based on the context it is used
func (o *PostCustomerShippingAddressConflictBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressConflictBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressConflictBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressConflictBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressConflictBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressConflictBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressCreatedBody post customer shipping address created body
swagger:model PostCustomerShippingAddressCreatedBody
*/
type PostCustomerShippingAddressCreatedBody struct {

	// links
	Links *PostCustomerShippingAddressCreatedBodyLinks `json:"_links,omitempty"`

	// Flag that indicates whether customer shipping address is the dafault.
	// Possible Values:
	//  - `true`: Shipping Address is customer's default.
	//  - `false`: Shipping Address is not customer's default.
	//
	Default bool `json:"default,omitempty"`

	// The Id of the Shipping Address Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// metadata
	Metadata *PostCustomerShippingAddressCreatedBodyMetadata `json:"metadata,omitempty"`

	// ship to
	ShipTo *PostCustomerShippingAddressCreatedBodyShipTo `json:"shipTo,omitempty"`
}

// Validate validates this post customer shipping address created body
func (o *PostCustomerShippingAddressCreatedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShipTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressCreatedBody) validateLinks(formats strfmt.Registry) error {
	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressCreated" + "." + "_links")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressCreated" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBody) validateID(formats strfmt.Registry) error {
	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerShippingAddressCreated"+"."+"id", "body", o.ID, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"id", "body", o.ID, 32); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBody) validateMetadata(formats strfmt.Registry) error {
	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressCreated" + "." + "metadata")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressCreated" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBody) validateShipTo(formats strfmt.Registry) error {
	if swag.IsZero(o.ShipTo) { // not required
		return nil
	}

	if o.ShipTo != nil {
		if err := o.ShipTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressCreated" + "." + "shipTo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressCreated" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post customer shipping address created body based on the context it is used
func (o *PostCustomerShippingAddressCreatedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLinks(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMetadata(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateShipTo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressCreatedBody) contextValidateLinks(ctx context.Context, formats strfmt.Registry) error {

	if o.Links != nil {

		if swag.IsZero(o.Links) { // not required
			return nil
		}

		if err := o.Links.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressCreated" + "." + "_links")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressCreated" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBody) contextValidateMetadata(ctx context.Context, formats strfmt.Registry) error {

	if o.Metadata != nil {

		if swag.IsZero(o.Metadata) { // not required
			return nil
		}

		if err := o.Metadata.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressCreated" + "." + "metadata")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressCreated" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBody) contextValidateShipTo(ctx context.Context, formats strfmt.Registry) error {

	if o.ShipTo != nil {

		if swag.IsZero(o.ShipTo) { // not required
			return nil
		}

		if err := o.ShipTo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressCreated" + "." + "shipTo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressCreated" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressCreatedBodyLinks post customer shipping address created body links
swagger:model PostCustomerShippingAddressCreatedBodyLinks
*/
type PostCustomerShippingAddressCreatedBodyLinks struct {

	// customer
	Customer *PostCustomerShippingAddressCreatedBodyLinksCustomer `json:"customer,omitempty"`

	// self
	Self *PostCustomerShippingAddressCreatedBodyLinksSelf `json:"self,omitempty"`
}

// Validate validates this post customer shipping address created body links
func (o *PostCustomerShippingAddressCreatedBodyLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyLinks) validateCustomer(formats strfmt.Registry) error {
	if swag.IsZero(o.Customer) { // not required
		return nil
	}

	if o.Customer != nil {
		if err := o.Customer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressCreated" + "." + "_links" + "." + "customer")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressCreated" + "." + "_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyLinks) validateSelf(formats strfmt.Registry) error {
	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressCreated" + "." + "_links" + "." + "self")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressCreated" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post customer shipping address created body links based on the context it is used
func (o *PostCustomerShippingAddressCreatedBodyLinks) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCustomer(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateSelf(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyLinks) contextValidateCustomer(ctx context.Context, formats strfmt.Registry) error {

	if o.Customer != nil {

		if swag.IsZero(o.Customer) { // not required
			return nil
		}

		if err := o.Customer.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressCreated" + "." + "_links" + "." + "customer")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressCreated" + "." + "_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyLinks) contextValidateSelf(ctx context.Context, formats strfmt.Registry) error {

	if o.Self != nil {

		if swag.IsZero(o.Self) { // not required
			return nil
		}

		if err := o.Self.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressCreated" + "." + "_links" + "." + "self")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressCreated" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBodyLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBodyLinks) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressCreatedBodyLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressCreatedBodyLinksCustomer post customer shipping address created body links customer
swagger:model PostCustomerShippingAddressCreatedBodyLinksCustomer
*/
type PostCustomerShippingAddressCreatedBodyLinksCustomer struct {

	// Link to the Customer
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer shipping address created body links customer
func (o *PostCustomerShippingAddressCreatedBodyLinksCustomer) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address created body links customer based on the context it is used
func (o *PostCustomerShippingAddressCreatedBodyLinksCustomer) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyLinksCustomer) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressCreated"+"."+"_links"+"."+"customer"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBodyLinksCustomer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBodyLinksCustomer) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressCreatedBodyLinksCustomer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressCreatedBodyLinksSelf post customer shipping address created body links self
swagger:model PostCustomerShippingAddressCreatedBodyLinksSelf
*/
type PostCustomerShippingAddressCreatedBodyLinksSelf struct {

	// Link to the Customers Shipping Address
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3/shipping-addresses/D9F3439F0448C901E053A2598D0AA1CC
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer shipping address created body links self
func (o *PostCustomerShippingAddressCreatedBodyLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address created body links self based on the context it is used
func (o *PostCustomerShippingAddressCreatedBodyLinksSelf) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyLinksSelf) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressCreated"+"."+"_links"+"."+"self"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBodyLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBodyLinksSelf) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressCreatedBodyLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressCreatedBodyMetadata post customer shipping address created body metadata
swagger:model PostCustomerShippingAddressCreatedBodyMetadata
*/
type PostCustomerShippingAddressCreatedBodyMetadata struct {

	// The creator of the Shipping Address.
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this post customer shipping address created body metadata
func (o *PostCustomerShippingAddressCreatedBodyMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address created body metadata based on the context it is used
func (o *PostCustomerShippingAddressCreatedBodyMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCreator(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyMetadata) contextValidateCreator(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressCreated"+"."+"metadata"+"."+"creator", "body", string(o.Creator)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBodyMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBodyMetadata) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressCreatedBodyMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressCreatedBodyShipTo post customer shipping address created body ship to
swagger:model PostCustomerShippingAddressCreatedBodyShipTo
*/
type PostCustomerShippingAddressCreatedBodyShipTo struct {

	// First line of the shipping address.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Second line of the shipping address.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the shipping address. Use 2 character the State,
	// Province, and Territory Codes for the United States and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Company associated with the shipping address.
	//
	// Max Length: 60
	Company string `json:"company,omitempty"`

	// Country of the shipping address. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Email associated with the shipping address.
	//
	// Max Length: 320
	Email string `json:"email,omitempty"`

	// First name of the recipient.
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Last name of the recipient.
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// City of the shipping address.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Phone number associated with the shipping address.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the shipping address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// Example 12345-6789
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// Example A1B 2C3
	//
	// **American Express Direct**\
	// Before sending the postal code to the processor, all nonalphanumeric characters are removed and, if the
	// remaining value is longer than nine characters, truncates the value starting from the right side.
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this post customer shipping address created body ship to
func (o *PostCustomerShippingAddressCreatedBodyShipTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validateAddress1(formats strfmt.Registry) error {
	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"address1", "body", o.Address1, 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validateAddress2(formats strfmt.Registry) error {
	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"address2", "body", o.Address2, 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validateAdministrativeArea(formats strfmt.Registry) error {
	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"administrativeArea", "body", o.AdministrativeArea, 20); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validateCompany(formats strfmt.Registry) error {
	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"company", "body", o.Company, 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validateCountry(formats strfmt.Registry) error {
	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"country", "body", o.Country, 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validateEmail(formats strfmt.Registry) error {
	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"email", "body", o.Email, 320); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validateFirstName(formats strfmt.Registry) error {
	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"firstName", "body", o.FirstName, 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validateLastName(formats strfmt.Registry) error {
	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"lastName", "body", o.LastName, 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validateLocality(formats strfmt.Registry) error {
	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"locality", "body", o.Locality, 50); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validatePhoneNumber(formats strfmt.Registry) error {
	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"phoneNumber", "body", o.PhoneNumber, 15); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressCreatedBodyShipTo) validatePostalCode(formats strfmt.Registry) error {
	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressCreated"+"."+"shipTo"+"."+"postalCode", "body", o.PostalCode, 10); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post customer shipping address created body ship to based on context it is used
func (o *PostCustomerShippingAddressCreatedBodyShipTo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBodyShipTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressCreatedBodyShipTo) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressCreatedBodyShipTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressFailedDependencyBody post customer shipping address failed dependency body
swagger:model PostCustomerShippingAddressFailedDependencyBody
*/
type PostCustomerShippingAddressFailedDependencyBody struct {

	// errors
	// Read Only: true
	Errors []*PostCustomerShippingAddressFailedDependencyBodyErrorsItems0 `json:"errors"`
}

// Validate validates this post customer shipping address failed dependency body
func (o *PostCustomerShippingAddressFailedDependencyBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressFailedDependencyBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerShippingAddressFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("postCustomerShippingAddressFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this post customer shipping address failed dependency body based on the context it is used
func (o *PostCustomerShippingAddressFailedDependencyBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressFailedDependencyBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressFailedDependency"+"."+"errors", "body", []*PostCustomerShippingAddressFailedDependencyBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerShippingAddressFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("postCustomerShippingAddressFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressFailedDependencyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressFailedDependencyBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressFailedDependencyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressFailedDependencyBodyErrorsItems0 post customer shipping address failed dependency body errors items0
swagger:model PostCustomerShippingAddressFailedDependencyBodyErrorsItems0
*/
type PostCustomerShippingAddressFailedDependencyBodyErrorsItems0 struct {

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - notFound
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer shipping address failed dependency body errors items0
func (o *PostCustomerShippingAddressFailedDependencyBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address failed dependency body errors items0 based on the context it is used
func (o *PostCustomerShippingAddressFailedDependencyBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressFailedDependencyBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressFailedDependencyBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressFailedDependencyBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressFailedDependencyBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressFailedDependencyBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressForbiddenBody post customer shipping address forbidden body
swagger:model PostCustomerShippingAddressForbiddenBody
*/
type PostCustomerShippingAddressForbiddenBody struct {

	// errors
	// Read Only: true
	Errors []*PostCustomerShippingAddressForbiddenBodyErrorsItems0 `json:"errors"`
}

// Validate validates this post customer shipping address forbidden body
func (o *PostCustomerShippingAddressForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressForbiddenBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerShippingAddressForbidden" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("postCustomerShippingAddressForbidden" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this post customer shipping address forbidden body based on the context it is used
func (o *PostCustomerShippingAddressForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressForbiddenBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressForbidden"+"."+"errors", "body", []*PostCustomerShippingAddressForbiddenBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerShippingAddressForbidden" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("postCustomerShippingAddressForbidden" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressForbiddenBodyErrorsItems0 post customer shipping address forbidden body errors items0
swagger:model PostCustomerShippingAddressForbiddenBodyErrorsItems0
*/
type PostCustomerShippingAddressForbiddenBodyErrorsItems0 struct {

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - forbidden
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer shipping address forbidden body errors items0
func (o *PostCustomerShippingAddressForbiddenBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address forbidden body errors items0 based on the context it is used
func (o *PostCustomerShippingAddressForbiddenBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressForbiddenBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressForbiddenBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressForbiddenBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressForbiddenBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressForbiddenBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressInternalServerErrorBody post customer shipping address internal server error body
swagger:model PostCustomerShippingAddressInternalServerErrorBody
*/
type PostCustomerShippingAddressInternalServerErrorBody struct {

	// errors
	// Read Only: true
	Errors []*PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0 `json:"errors"`
}

// Validate validates this post customer shipping address internal server error body
func (o *PostCustomerShippingAddressInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressInternalServerErrorBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerShippingAddressInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("postCustomerShippingAddressInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this post customer shipping address internal server error body based on the context it is used
func (o *PostCustomerShippingAddressInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressInternalServerErrorBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressInternalServerError"+"."+"errors", "body", []*PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerShippingAddressInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("postCustomerShippingAddressInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0 post customer shipping address internal server error body errors items0
swagger:model PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0
*/
type PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0 struct {

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - internalError
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer shipping address internal server error body errors items0
func (o *PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address internal server error body errors items0 based on the context it is used
func (o *PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressInternalServerErrorBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressParamsBodyLinks post customer shipping address params body links
swagger:model PostCustomerShippingAddressParamsBodyLinks
*/
type PostCustomerShippingAddressParamsBodyLinks struct {

	// customer
	Customer *PostCustomerShippingAddressParamsBodyLinksCustomer `json:"customer,omitempty"`

	// self
	Self *PostCustomerShippingAddressParamsBodyLinksSelf `json:"self,omitempty"`
}

// Validate validates this post customer shipping address params body links
func (o *PostCustomerShippingAddressParamsBodyLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressParamsBodyLinks) validateCustomer(formats strfmt.Registry) error {
	if swag.IsZero(o.Customer) { // not required
		return nil
	}

	if o.Customer != nil {
		if err := o.Customer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressRequest" + "." + "_links" + "." + "customer")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressRequest" + "." + "_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyLinks) validateSelf(formats strfmt.Registry) error {
	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressRequest" + "." + "_links" + "." + "self")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressRequest" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post customer shipping address params body links based on the context it is used
func (o *PostCustomerShippingAddressParamsBodyLinks) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCustomer(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateSelf(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressParamsBodyLinks) contextValidateCustomer(ctx context.Context, formats strfmt.Registry) error {

	if o.Customer != nil {

		if swag.IsZero(o.Customer) { // not required
			return nil
		}

		if err := o.Customer.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressRequest" + "." + "_links" + "." + "customer")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressRequest" + "." + "_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyLinks) contextValidateSelf(ctx context.Context, formats strfmt.Registry) error {

	if o.Self != nil {

		if swag.IsZero(o.Self) { // not required
			return nil
		}

		if err := o.Self.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerShippingAddressRequest" + "." + "_links" + "." + "self")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postCustomerShippingAddressRequest" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressParamsBodyLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressParamsBodyLinks) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressParamsBodyLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressParamsBodyLinksCustomer post customer shipping address params body links customer
swagger:model PostCustomerShippingAddressParamsBodyLinksCustomer
*/
type PostCustomerShippingAddressParamsBodyLinksCustomer struct {

	// Link to the Customer
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer shipping address params body links customer
func (o *PostCustomerShippingAddressParamsBodyLinksCustomer) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address params body links customer based on the context it is used
func (o *PostCustomerShippingAddressParamsBodyLinksCustomer) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressParamsBodyLinksCustomer) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressRequest"+"."+"_links"+"."+"customer"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressParamsBodyLinksCustomer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressParamsBodyLinksCustomer) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressParamsBodyLinksCustomer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressParamsBodyLinksSelf post customer shipping address params body links self
swagger:model PostCustomerShippingAddressParamsBodyLinksSelf
*/
type PostCustomerShippingAddressParamsBodyLinksSelf struct {

	// Link to the Customers Shipping Address
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3/shipping-addresses/D9F3439F0448C901E053A2598D0AA1CC
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer shipping address params body links self
func (o *PostCustomerShippingAddressParamsBodyLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address params body links self based on the context it is used
func (o *PostCustomerShippingAddressParamsBodyLinksSelf) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressParamsBodyLinksSelf) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressRequest"+"."+"_links"+"."+"self"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressParamsBodyLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressParamsBodyLinksSelf) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressParamsBodyLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressParamsBodyMetadata post customer shipping address params body metadata
swagger:model PostCustomerShippingAddressParamsBodyMetadata
*/
type PostCustomerShippingAddressParamsBodyMetadata struct {

	// The creator of the Shipping Address.
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this post customer shipping address params body metadata
func (o *PostCustomerShippingAddressParamsBodyMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this post customer shipping address params body metadata based on the context it is used
func (o *PostCustomerShippingAddressParamsBodyMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCreator(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressParamsBodyMetadata) contextValidateCreator(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "postCustomerShippingAddressRequest"+"."+"metadata"+"."+"creator", "body", string(o.Creator)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressParamsBodyMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressParamsBodyMetadata) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressParamsBodyMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostCustomerShippingAddressParamsBodyShipTo post customer shipping address params body ship to
swagger:model PostCustomerShippingAddressParamsBodyShipTo
*/
type PostCustomerShippingAddressParamsBodyShipTo struct {

	// First line of the shipping address.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Second line of the shipping address.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the shipping address. Use 2 character the State,
	// Province, and Territory Codes for the United States and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Company associated with the shipping address.
	//
	// Max Length: 60
	Company string `json:"company,omitempty"`

	// Country of the shipping address. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Email associated with the shipping address.
	//
	// Max Length: 320
	Email string `json:"email,omitempty"`

	// First name of the recipient.
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Last name of the recipient.
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// City of the shipping address.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Phone number associated with the shipping address.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the shipping address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// Example 12345-6789
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// Example A1B 2C3
	//
	// **American Express Direct**\
	// Before sending the postal code to the processor, all nonalphanumeric characters are removed and, if the
	// remaining value is longer than nine characters, truncates the value starting from the right side.
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this post customer shipping address params body ship to
func (o *PostCustomerShippingAddressParamsBodyShipTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validateAddress1(formats strfmt.Registry) error {
	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"address1", "body", o.Address1, 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validateAddress2(formats strfmt.Registry) error {
	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"address2", "body", o.Address2, 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validateAdministrativeArea(formats strfmt.Registry) error {
	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"administrativeArea", "body", o.AdministrativeArea, 20); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validateCompany(formats strfmt.Registry) error {
	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"company", "body", o.Company, 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validateCountry(formats strfmt.Registry) error {
	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"country", "body", o.Country, 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validateEmail(formats strfmt.Registry) error {
	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"email", "body", o.Email, 320); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validateFirstName(formats strfmt.Registry) error {
	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"firstName", "body", o.FirstName, 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validateLastName(formats strfmt.Registry) error {
	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"lastName", "body", o.LastName, 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validateLocality(formats strfmt.Registry) error {
	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"locality", "body", o.Locality, 50); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validatePhoneNumber(formats strfmt.Registry) error {
	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"phoneNumber", "body", o.PhoneNumber, 15); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerShippingAddressParamsBodyShipTo) validatePostalCode(formats strfmt.Registry) error {
	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerShippingAddressRequest"+"."+"shipTo"+"."+"postalCode", "body", o.PostalCode, 10); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post customer shipping address params body ship to based on context it is used
func (o *PostCustomerShippingAddressParamsBodyShipTo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerShippingAddressParamsBodyShipTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerShippingAddressParamsBodyShipTo) UnmarshalBinary(b []byte) error {
	var res PostCustomerShippingAddressParamsBodyShipTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
