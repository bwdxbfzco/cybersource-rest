// Code generated by go-swagger; DO NOT EDIT.

package customer_shipping_address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCustomerShippingAddressesListReader is a Reader for the GetCustomerShippingAddressesList structure.
type GetCustomerShippingAddressesListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomerShippingAddressesListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomerShippingAddressesListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCustomerShippingAddressesListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCustomerShippingAddressesListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomerShippingAddressesListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetCustomerShippingAddressesListGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 424:
		result := NewGetCustomerShippingAddressesListFailedDependency()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCustomerShippingAddressesListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /tms/v2/customers/{customerId}/shipping-addresses] getCustomerShippingAddressesList", response, response.Code())
	}
}

// NewGetCustomerShippingAddressesListOK creates a GetCustomerShippingAddressesListOK with default headers values
func NewGetCustomerShippingAddressesListOK() *GetCustomerShippingAddressesListOK {
	return &GetCustomerShippingAddressesListOK{}
}

/*
GetCustomerShippingAddressesListOK describes a response with status code 200, with default header values.

Returns all existing Shipping Addresses associated with the supplied Id.
*/
type GetCustomerShippingAddressesListOK struct {

	/* The total number of Shipping Addresses associated with the Customer.
	 */
	XTotalCount string

	/* A globally-unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *GetCustomerShippingAddressesListOKBody
}

// IsSuccess returns true when this get customer shipping addresses list o k response has a 2xx status code
func (o *GetCustomerShippingAddressesListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get customer shipping addresses list o k response has a 3xx status code
func (o *GetCustomerShippingAddressesListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get customer shipping addresses list o k response has a 4xx status code
func (o *GetCustomerShippingAddressesListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get customer shipping addresses list o k response has a 5xx status code
func (o *GetCustomerShippingAddressesListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get customer shipping addresses list o k response a status code equal to that given
func (o *GetCustomerShippingAddressesListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get customer shipping addresses list o k response
func (o *GetCustomerShippingAddressesListOK) Code() int {
	return 200
}

func (o *GetCustomerShippingAddressesListOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListOK %s", 200, payload)
}

func (o *GetCustomerShippingAddressesListOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListOK %s", 200, payload)
}

func (o *GetCustomerShippingAddressesListOK) GetPayload() *GetCustomerShippingAddressesListOKBody {
	return o.Payload
}

func (o *GetCustomerShippingAddressesListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Total-Count
	hdrXTotalCount := response.GetHeader("X-Total-Count")

	if hdrXTotalCount != "" {
		o.XTotalCount = hdrXTotalCount
	}

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(GetCustomerShippingAddressesListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerShippingAddressesListBadRequest creates a GetCustomerShippingAddressesListBadRequest with default headers values
func NewGetCustomerShippingAddressesListBadRequest() *GetCustomerShippingAddressesListBadRequest {
	return &GetCustomerShippingAddressesListBadRequest{}
}

/*
GetCustomerShippingAddressesListBadRequest describes a response with status code 400, with default header values.

Bad Request: e.g. A required header value could be missing.
*/
type GetCustomerShippingAddressesListBadRequest struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *GetCustomerShippingAddressesListBadRequestBody
}

// IsSuccess returns true when this get customer shipping addresses list bad request response has a 2xx status code
func (o *GetCustomerShippingAddressesListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get customer shipping addresses list bad request response has a 3xx status code
func (o *GetCustomerShippingAddressesListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get customer shipping addresses list bad request response has a 4xx status code
func (o *GetCustomerShippingAddressesListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get customer shipping addresses list bad request response has a 5xx status code
func (o *GetCustomerShippingAddressesListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get customer shipping addresses list bad request response a status code equal to that given
func (o *GetCustomerShippingAddressesListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get customer shipping addresses list bad request response
func (o *GetCustomerShippingAddressesListBadRequest) Code() int {
	return 400
}

func (o *GetCustomerShippingAddressesListBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListBadRequest %s", 400, payload)
}

func (o *GetCustomerShippingAddressesListBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListBadRequest %s", 400, payload)
}

func (o *GetCustomerShippingAddressesListBadRequest) GetPayload() *GetCustomerShippingAddressesListBadRequestBody {
	return o.Payload
}

func (o *GetCustomerShippingAddressesListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(GetCustomerShippingAddressesListBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerShippingAddressesListForbidden creates a GetCustomerShippingAddressesListForbidden with default headers values
func NewGetCustomerShippingAddressesListForbidden() *GetCustomerShippingAddressesListForbidden {
	return &GetCustomerShippingAddressesListForbidden{}
}

/*
GetCustomerShippingAddressesListForbidden describes a response with status code 403, with default header values.

Forbidden: e.g. The profile might not have permission to perform the operation.
*/
type GetCustomerShippingAddressesListForbidden struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *GetCustomerShippingAddressesListForbiddenBody
}

// IsSuccess returns true when this get customer shipping addresses list forbidden response has a 2xx status code
func (o *GetCustomerShippingAddressesListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get customer shipping addresses list forbidden response has a 3xx status code
func (o *GetCustomerShippingAddressesListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get customer shipping addresses list forbidden response has a 4xx status code
func (o *GetCustomerShippingAddressesListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get customer shipping addresses list forbidden response has a 5xx status code
func (o *GetCustomerShippingAddressesListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get customer shipping addresses list forbidden response a status code equal to that given
func (o *GetCustomerShippingAddressesListForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get customer shipping addresses list forbidden response
func (o *GetCustomerShippingAddressesListForbidden) Code() int {
	return 403
}

func (o *GetCustomerShippingAddressesListForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListForbidden %s", 403, payload)
}

func (o *GetCustomerShippingAddressesListForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListForbidden %s", 403, payload)
}

func (o *GetCustomerShippingAddressesListForbidden) GetPayload() *GetCustomerShippingAddressesListForbiddenBody {
	return o.Payload
}

func (o *GetCustomerShippingAddressesListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(GetCustomerShippingAddressesListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerShippingAddressesListNotFound creates a GetCustomerShippingAddressesListNotFound with default headers values
func NewGetCustomerShippingAddressesListNotFound() *GetCustomerShippingAddressesListNotFound {
	return &GetCustomerShippingAddressesListNotFound{}
}

/*
GetCustomerShippingAddressesListNotFound describes a response with status code 404, with default header values.

Token Not Found. The Id may not exist or was entered incorrectly.
*/
type GetCustomerShippingAddressesListNotFound struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *GetCustomerShippingAddressesListNotFoundBody
}

// IsSuccess returns true when this get customer shipping addresses list not found response has a 2xx status code
func (o *GetCustomerShippingAddressesListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get customer shipping addresses list not found response has a 3xx status code
func (o *GetCustomerShippingAddressesListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get customer shipping addresses list not found response has a 4xx status code
func (o *GetCustomerShippingAddressesListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get customer shipping addresses list not found response has a 5xx status code
func (o *GetCustomerShippingAddressesListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get customer shipping addresses list not found response a status code equal to that given
func (o *GetCustomerShippingAddressesListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get customer shipping addresses list not found response
func (o *GetCustomerShippingAddressesListNotFound) Code() int {
	return 404
}

func (o *GetCustomerShippingAddressesListNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListNotFound %s", 404, payload)
}

func (o *GetCustomerShippingAddressesListNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListNotFound %s", 404, payload)
}

func (o *GetCustomerShippingAddressesListNotFound) GetPayload() *GetCustomerShippingAddressesListNotFoundBody {
	return o.Payload
}

func (o *GetCustomerShippingAddressesListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(GetCustomerShippingAddressesListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerShippingAddressesListGone creates a GetCustomerShippingAddressesListGone with default headers values
func NewGetCustomerShippingAddressesListGone() *GetCustomerShippingAddressesListGone {
	return &GetCustomerShippingAddressesListGone{}
}

/*
GetCustomerShippingAddressesListGone describes a response with status code 410, with default header values.

Token Not Available. The token has been deleted.
*/
type GetCustomerShippingAddressesListGone struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *GetCustomerShippingAddressesListGoneBody
}

// IsSuccess returns true when this get customer shipping addresses list gone response has a 2xx status code
func (o *GetCustomerShippingAddressesListGone) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get customer shipping addresses list gone response has a 3xx status code
func (o *GetCustomerShippingAddressesListGone) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get customer shipping addresses list gone response has a 4xx status code
func (o *GetCustomerShippingAddressesListGone) IsClientError() bool {
	return true
}

// IsServerError returns true when this get customer shipping addresses list gone response has a 5xx status code
func (o *GetCustomerShippingAddressesListGone) IsServerError() bool {
	return false
}

// IsCode returns true when this get customer shipping addresses list gone response a status code equal to that given
func (o *GetCustomerShippingAddressesListGone) IsCode(code int) bool {
	return code == 410
}

// Code gets the status code for the get customer shipping addresses list gone response
func (o *GetCustomerShippingAddressesListGone) Code() int {
	return 410
}

func (o *GetCustomerShippingAddressesListGone) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListGone %s", 410, payload)
}

func (o *GetCustomerShippingAddressesListGone) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListGone %s", 410, payload)
}

func (o *GetCustomerShippingAddressesListGone) GetPayload() *GetCustomerShippingAddressesListGoneBody {
	return o.Payload
}

func (o *GetCustomerShippingAddressesListGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(GetCustomerShippingAddressesListGoneBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerShippingAddressesListFailedDependency creates a GetCustomerShippingAddressesListFailedDependency with default headers values
func NewGetCustomerShippingAddressesListFailedDependency() *GetCustomerShippingAddressesListFailedDependency {
	return &GetCustomerShippingAddressesListFailedDependency{}
}

/*
GetCustomerShippingAddressesListFailedDependency describes a response with status code 424, with default header values.

Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.
*/
type GetCustomerShippingAddressesListFailedDependency struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *GetCustomerShippingAddressesListFailedDependencyBody
}

// IsSuccess returns true when this get customer shipping addresses list failed dependency response has a 2xx status code
func (o *GetCustomerShippingAddressesListFailedDependency) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get customer shipping addresses list failed dependency response has a 3xx status code
func (o *GetCustomerShippingAddressesListFailedDependency) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get customer shipping addresses list failed dependency response has a 4xx status code
func (o *GetCustomerShippingAddressesListFailedDependency) IsClientError() bool {
	return true
}

// IsServerError returns true when this get customer shipping addresses list failed dependency response has a 5xx status code
func (o *GetCustomerShippingAddressesListFailedDependency) IsServerError() bool {
	return false
}

// IsCode returns true when this get customer shipping addresses list failed dependency response a status code equal to that given
func (o *GetCustomerShippingAddressesListFailedDependency) IsCode(code int) bool {
	return code == 424
}

// Code gets the status code for the get customer shipping addresses list failed dependency response
func (o *GetCustomerShippingAddressesListFailedDependency) Code() int {
	return 424
}

func (o *GetCustomerShippingAddressesListFailedDependency) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListFailedDependency %s", 424, payload)
}

func (o *GetCustomerShippingAddressesListFailedDependency) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListFailedDependency %s", 424, payload)
}

func (o *GetCustomerShippingAddressesListFailedDependency) GetPayload() *GetCustomerShippingAddressesListFailedDependencyBody {
	return o.Payload
}

func (o *GetCustomerShippingAddressesListFailedDependency) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(GetCustomerShippingAddressesListFailedDependencyBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerShippingAddressesListInternalServerError creates a GetCustomerShippingAddressesListInternalServerError with default headers values
func NewGetCustomerShippingAddressesListInternalServerError() *GetCustomerShippingAddressesListInternalServerError {
	return &GetCustomerShippingAddressesListInternalServerError{}
}

/*
GetCustomerShippingAddressesListInternalServerError describes a response with status code 500, with default header values.

Unexpected error.
*/
type GetCustomerShippingAddressesListInternalServerError struct {

	/* A globally unique Id associated with your request.
	 */
	UniqueTransactionID string

	/* The mandatory correlation Id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *GetCustomerShippingAddressesListInternalServerErrorBody
}

// IsSuccess returns true when this get customer shipping addresses list internal server error response has a 2xx status code
func (o *GetCustomerShippingAddressesListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get customer shipping addresses list internal server error response has a 3xx status code
func (o *GetCustomerShippingAddressesListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get customer shipping addresses list internal server error response has a 4xx status code
func (o *GetCustomerShippingAddressesListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get customer shipping addresses list internal server error response has a 5xx status code
func (o *GetCustomerShippingAddressesListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get customer shipping addresses list internal server error response a status code equal to that given
func (o *GetCustomerShippingAddressesListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get customer shipping addresses list internal server error response
func (o *GetCustomerShippingAddressesListInternalServerError) Code() int {
	return 500
}

func (o *GetCustomerShippingAddressesListInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListInternalServerError %s", 500, payload)
}

func (o *GetCustomerShippingAddressesListInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tms/v2/customers/{customerId}/shipping-addresses][%d] getCustomerShippingAddressesListInternalServerError %s", 500, payload)
}

func (o *GetCustomerShippingAddressesListInternalServerError) GetPayload() *GetCustomerShippingAddressesListInternalServerErrorBody {
	return o.Payload
}

func (o *GetCustomerShippingAddressesListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// hydrates response header v-c-correlation-id
	hdrVcCorrelationID := response.GetHeader("v-c-correlation-id")

	if hdrVcCorrelationID != "" {
		o.VcCorrelationID = hdrVcCorrelationID
	}

	o.Payload = new(GetCustomerShippingAddressesListInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCustomerShippingAddressesListBadRequestBody get customer shipping addresses list bad request body
swagger:model GetCustomerShippingAddressesListBadRequestBody
*/
type GetCustomerShippingAddressesListBadRequestBody struct {

	// errors
	// Read Only: true
	Errors []*GetCustomerShippingAddressesListBadRequestBodyErrorsItems0 `json:"errors"`
}

// Validate validates this get customer shipping addresses list bad request body
func (o *GetCustomerShippingAddressesListBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListBadRequestBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list bad request body based on the context it is used
func (o *GetCustomerShippingAddressesListBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListBadRequestBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListBadRequest"+"."+"errors", "body", []*GetCustomerShippingAddressesListBadRequestBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListBadRequestBodyErrorsItems0 get customer shipping addresses list bad request body errors items0
swagger:model GetCustomerShippingAddressesListBadRequestBodyErrorsItems0
*/
type GetCustomerShippingAddressesListBadRequestBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - invalidHeaders
	//   - missingHeaders
	//   - invalidFields
	//   - missingFields
	//   - unsupportedPaymentMethodModification
	//   - invalidCombination
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this get customer shipping addresses list bad request body errors items0
func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list bad request body errors items0 based on the context it is used
func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "details", "body", []*GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0(o.Details)); err != nil {
		return err
	}

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {

			if swag.IsZero(o.Details[i]) { // not required
				return nil
			}

			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListBadRequestBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0 get customer shipping addresses list bad request body errors items0 details items0
swagger:model GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0
*/
type GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this get customer shipping addresses list bad request body errors items0 details items0
func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list bad request body errors items0 details items0 based on the context it is used
func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLocation(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0) contextValidateLocation(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "location", "body", string(o.Location)); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0) contextValidateName(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "name", "body", string(o.Name)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListBadRequestBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListFailedDependencyBody get customer shipping addresses list failed dependency body
swagger:model GetCustomerShippingAddressesListFailedDependencyBody
*/
type GetCustomerShippingAddressesListFailedDependencyBody struct {

	// errors
	// Read Only: true
	Errors []*GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0 `json:"errors"`
}

// Validate validates this get customer shipping addresses list failed dependency body
func (o *GetCustomerShippingAddressesListFailedDependencyBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListFailedDependencyBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list failed dependency body based on the context it is used
func (o *GetCustomerShippingAddressesListFailedDependencyBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListFailedDependencyBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListFailedDependency"+"."+"errors", "body", []*GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListFailedDependencyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListFailedDependencyBody) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListFailedDependencyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0 get customer shipping addresses list failed dependency body errors items0
swagger:model GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0
*/
type GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0 struct {

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - notFound
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this get customer shipping addresses list failed dependency body errors items0
func (o *GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list failed dependency body errors items0 based on the context it is used
func (o *GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListFailedDependencyBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListForbiddenBody get customer shipping addresses list forbidden body
swagger:model GetCustomerShippingAddressesListForbiddenBody
*/
type GetCustomerShippingAddressesListForbiddenBody struct {

	// errors
	// Read Only: true
	Errors []*GetCustomerShippingAddressesListForbiddenBodyErrorsItems0 `json:"errors"`
}

// Validate validates this get customer shipping addresses list forbidden body
func (o *GetCustomerShippingAddressesListForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListForbiddenBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListForbidden" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListForbidden" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list forbidden body based on the context it is used
func (o *GetCustomerShippingAddressesListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListForbiddenBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListForbidden"+"."+"errors", "body", []*GetCustomerShippingAddressesListForbiddenBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListForbidden" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListForbidden" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListForbiddenBodyErrorsItems0 get customer shipping addresses list forbidden body errors items0
swagger:model GetCustomerShippingAddressesListForbiddenBodyErrorsItems0
*/
type GetCustomerShippingAddressesListForbiddenBodyErrorsItems0 struct {

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - forbidden
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this get customer shipping addresses list forbidden body errors items0
func (o *GetCustomerShippingAddressesListForbiddenBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list forbidden body errors items0 based on the context it is used
func (o *GetCustomerShippingAddressesListForbiddenBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListForbiddenBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListForbiddenBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListForbiddenBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListForbiddenBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListForbiddenBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListGoneBody get customer shipping addresses list gone body
swagger:model GetCustomerShippingAddressesListGoneBody
*/
type GetCustomerShippingAddressesListGoneBody struct {

	// errors
	// Read Only: true
	Errors []*GetCustomerShippingAddressesListGoneBodyErrorsItems0 `json:"errors"`
}

// Validate validates this get customer shipping addresses list gone body
func (o *GetCustomerShippingAddressesListGoneBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListGoneBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListGone" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListGone" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list gone body based on the context it is used
func (o *GetCustomerShippingAddressesListGoneBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListGoneBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListGone"+"."+"errors", "body", []*GetCustomerShippingAddressesListGoneBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListGone" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListGone" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListGoneBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListGoneBody) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListGoneBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListGoneBodyErrorsItems0 get customer shipping addresses list gone body errors items0
swagger:model GetCustomerShippingAddressesListGoneBodyErrorsItems0
*/
type GetCustomerShippingAddressesListGoneBodyErrorsItems0 struct {

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - notAvailable
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this get customer shipping addresses list gone body errors items0
func (o *GetCustomerShippingAddressesListGoneBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list gone body errors items0 based on the context it is used
func (o *GetCustomerShippingAddressesListGoneBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListGoneBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListGoneBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListGoneBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListGoneBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListGoneBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListInternalServerErrorBody get customer shipping addresses list internal server error body
swagger:model GetCustomerShippingAddressesListInternalServerErrorBody
*/
type GetCustomerShippingAddressesListInternalServerErrorBody struct {

	// errors
	// Read Only: true
	Errors []*GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0 `json:"errors"`
}

// Validate validates this get customer shipping addresses list internal server error body
func (o *GetCustomerShippingAddressesListInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListInternalServerErrorBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list internal server error body based on the context it is used
func (o *GetCustomerShippingAddressesListInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListInternalServerErrorBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListInternalServerError"+"."+"errors", "body", []*GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0 get customer shipping addresses list internal server error body errors items0
swagger:model GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0
*/
type GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0 struct {

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - internalError
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this get customer shipping addresses list internal server error body errors items0
func (o *GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list internal server error body errors items0 based on the context it is used
func (o *GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListInternalServerErrorBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListNotFoundBody get customer shipping addresses list not found body
swagger:model GetCustomerShippingAddressesListNotFoundBody
*/
type GetCustomerShippingAddressesListNotFoundBody struct {

	// errors
	// Read Only: true
	Errors []*GetCustomerShippingAddressesListNotFoundBodyErrorsItems0 `json:"errors"`
}

// Validate validates this get customer shipping addresses list not found body
func (o *GetCustomerShippingAddressesListNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListNotFoundBody) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListNotFound" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListNotFound" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list not found body based on the context it is used
func (o *GetCustomerShippingAddressesListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListNotFoundBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListNotFound"+"."+"errors", "body", []*GetCustomerShippingAddressesListNotFoundBodyErrorsItems0(o.Errors)); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {

		if o.Errors[i] != nil {

			if swag.IsZero(o.Errors[i]) { // not required
				return nil
			}

			if err := o.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListNotFound" + "." + "errors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListNotFound" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListNotFoundBodyErrorsItems0 get customer shipping addresses list not found body errors items0
swagger:model GetCustomerShippingAddressesListNotFoundBodyErrorsItems0
*/
type GetCustomerShippingAddressesListNotFoundBodyErrorsItems0 struct {

	// The detailed message related to the type.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	//
	// Possible Values:
	//   - notFound
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this get customer shipping addresses list not found body errors items0
func (o *GetCustomerShippingAddressesListNotFoundBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list not found body errors items0 based on the context it is used
func (o *GetCustomerShippingAddressesListNotFoundBodyErrorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMessage(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListNotFoundBodyErrorsItems0) contextValidateMessage(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "message", "body", string(o.Message)); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListNotFoundBodyErrorsItems0) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "type", "body", string(o.Type)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListNotFoundBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListNotFoundBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListNotFoundBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBody ShippingAddressListForCustomer
//
// A paginated container of Shipping Addresses.
//
swagger:model GetCustomerShippingAddressesListOKBody
*/
type GetCustomerShippingAddressesListOKBody struct {

	// embedded
	Embedded *GetCustomerShippingAddressesListOKBodyEmbedded `json:"_embedded,omitempty"`

	// links
	Links *GetCustomerShippingAddressesListOKBodyLinks `json:"_links,omitempty"`

	// The number of Shipping Addresses returned in the array.
	// Example: 1
	// Read Only: true
	Count int64 `json:"count,omitempty"`

	// The limit parameter supplied in the request.
	// Example: 20
	// Read Only: true
	Limit int64 `json:"limit,omitempty"`

	// The offset parameter supplied in the request.
	// Example: 0
	// Read Only: true
	Offset int64 `json:"offset,omitempty"`

	// The total number of Shipping Addresses associated with the Customer.
	// Example: 1
	// Read Only: true
	Total int64 `json:"total,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body
func (o *GetCustomerShippingAddressesListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBody) validateEmbedded(formats strfmt.Registry) error {
	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_embedded")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBody) validateLinks(formats strfmt.Registry) error {
	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body based on the context it is used
func (o *GetCustomerShippingAddressesListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateEmbedded(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateLinks(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateCount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateLimit(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateOffset(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateTotal(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBody) contextValidateEmbedded(ctx context.Context, formats strfmt.Registry) error {

	if o.Embedded != nil {

		if swag.IsZero(o.Embedded) { // not required
			return nil
		}

		if err := o.Embedded.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_embedded")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBody) contextValidateLinks(ctx context.Context, formats strfmt.Registry) error {

	if o.Links != nil {

		if swag.IsZero(o.Links) { // not required
			return nil
		}

		if err := o.Links.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBody) contextValidateCount(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListOK"+"."+"count", "body", int64(o.Count)); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBody) contextValidateLimit(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListOK"+"."+"limit", "body", int64(o.Limit)); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBody) contextValidateOffset(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListOK"+"."+"offset", "body", int64(o.Offset)); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBody) contextValidateTotal(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListOK"+"."+"total", "body", int64(o.Total)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBody) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyEmbedded Shipping Address Resources.
//
swagger:model GetCustomerShippingAddressesListOKBodyEmbedded
*/
type GetCustomerShippingAddressesListOKBodyEmbedded struct {

	// shipping addresses
	// Read Only: true
	ShippingAddresses []*GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0 `json:"shippingAddresses"`
}

// Validate validates this get customer shipping addresses list o k body embedded
func (o *GetCustomerShippingAddressesListOKBodyEmbedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateShippingAddresses(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbedded) validateShippingAddresses(formats strfmt.Registry) error {
	if swag.IsZero(o.ShippingAddresses) { // not required
		return nil
	}

	for i := 0; i < len(o.ShippingAddresses); i++ {
		if swag.IsZero(o.ShippingAddresses[i]) { // not required
			continue
		}

		if o.ShippingAddresses[i] != nil {
			if err := o.ShippingAddresses[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_embedded" + "." + "shippingAddresses" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_embedded" + "." + "shippingAddresses" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body embedded based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyEmbedded) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateShippingAddresses(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbedded) contextValidateShippingAddresses(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListOK"+"."+"_embedded"+"."+"shippingAddresses", "body", []*GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0(o.ShippingAddresses)); err != nil {
		return err
	}

	for i := 0; i < len(o.ShippingAddresses); i++ {

		if o.ShippingAddresses[i] != nil {

			if swag.IsZero(o.ShippingAddresses[i]) { // not required
				return nil
			}

			if err := o.ShippingAddresses[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_embedded" + "." + "shippingAddresses" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_embedded" + "." + "shippingAddresses" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbedded) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyEmbedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0 get customer shipping addresses list o k body embedded shipping addresses items0
swagger:model GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0
*/
type GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0 struct {

	// links
	Links *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links `json:"_links,omitempty"`

	// Flag that indicates whether customer shipping address is the dafault.
	// Possible Values:
	//  - `true`: Shipping Address is customer's default.
	//  - `false`: Shipping Address is not customer's default.
	//
	Default bool `json:"default,omitempty"`

	// The Id of the Shipping Address Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// metadata
	Metadata *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Metadata `json:"metadata,omitempty"`

	// ship to
	ShipTo *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo `json:"shipTo,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body embedded shipping addresses items0
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShipTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) validateLinks(formats strfmt.Registry) error {
	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) validateID(formats strfmt.Registry) error {
	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("id", "body", o.ID, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("id", "body", o.ID, 32); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) validateMetadata(formats strfmt.Registry) error {
	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) validateShipTo(formats strfmt.Registry) error {
	if swag.IsZero(o.ShipTo) { // not required
		return nil
	}

	if o.ShipTo != nil {
		if err := o.ShipTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shipTo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("shipTo")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body embedded shipping addresses items0 based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLinks(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMetadata(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateShipTo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) contextValidateLinks(ctx context.Context, formats strfmt.Registry) error {

	if o.Links != nil {

		if swag.IsZero(o.Links) { // not required
			return nil
		}

		if err := o.Links.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) contextValidateMetadata(ctx context.Context, formats strfmt.Registry) error {

	if o.Metadata != nil {

		if swag.IsZero(o.Metadata) { // not required
			return nil
		}

		if err := o.Metadata.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) contextValidateShipTo(ctx context.Context, formats strfmt.Registry) error {

	if o.ShipTo != nil {

		if swag.IsZero(o.ShipTo) { // not required
			return nil
		}

		if err := o.ShipTo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shipTo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("shipTo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links get customer shipping addresses list o k body embedded shipping addresses items0 links
swagger:model GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links
*/
type GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links struct {

	// customer
	Customer *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksCustomer `json:"customer,omitempty"`

	// self
	Self *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body embedded shipping addresses items0 links
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links) validateCustomer(formats strfmt.Registry) error {
	if swag.IsZero(o.Customer) { // not required
		return nil
	}

	if o.Customer != nil {
		if err := o.Customer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "customer")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links) validateSelf(formats strfmt.Registry) error {
	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body embedded shipping addresses items0 links based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCustomer(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateSelf(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links) contextValidateCustomer(ctx context.Context, formats strfmt.Registry) error {

	if o.Customer != nil {

		if swag.IsZero(o.Customer) { // not required
			return nil
		}

		if err := o.Customer.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "customer")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links) contextValidateSelf(ctx context.Context, formats strfmt.Registry) error {

	if o.Self != nil {

		if swag.IsZero(o.Self) { // not required
			return nil
		}

		if err := o.Self.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksCustomer get customer shipping addresses list o k body embedded shipping addresses items0 links customer
swagger:model GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksCustomer
*/
type GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksCustomer struct {

	// Link to the Customer
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body embedded shipping addresses items0 links customer
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksCustomer) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body embedded shipping addresses items0 links customer based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksCustomer) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksCustomer) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "_links"+"."+"customer"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksCustomer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksCustomer) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksCustomer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksSelf get customer shipping addresses list o k body embedded shipping addresses items0 links self
swagger:model GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksSelf
*/
type GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksSelf struct {

	// Link to the Customers Shipping Address
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3/shipping-addresses/D9F3439F0448C901E053A2598D0AA1CC
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body embedded shipping addresses items0 links self
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body embedded shipping addresses items0 links self based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksSelf) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksSelf) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "_links"+"."+"self"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Metadata get customer shipping addresses list o k body embedded shipping addresses items0 metadata
swagger:model GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Metadata
*/
type GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Metadata struct {

	// The creator of the Shipping Address.
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body embedded shipping addresses items0 metadata
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Metadata) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body embedded shipping addresses items0 metadata based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Metadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCreator(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Metadata) contextValidateCreator(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "metadata"+"."+"creator", "body", string(o.Creator)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Metadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Metadata) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0Metadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo get customer shipping addresses list o k body embedded shipping addresses items0 ship to
swagger:model GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo
*/
type GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo struct {

	// First line of the shipping address.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Second line of the shipping address.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the shipping address. Use 2 character the State,
	// Province, and Territory Codes for the United States and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Company associated with the shipping address.
	//
	// Max Length: 60
	Company string `json:"company,omitempty"`

	// Country of the shipping address. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Email associated with the shipping address.
	//
	// Max Length: 320
	Email string `json:"email,omitempty"`

	// First name of the recipient.
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Last name of the recipient.
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// City of the shipping address.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Phone number associated with the shipping address.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the shipping address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// Example 12345-6789
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// Example A1B 2C3
	//
	// **American Express Direct**\
	// Before sending the postal code to the processor, all nonalphanumeric characters are removed and, if the
	// remaining value is longer than nine characters, truncates the value starting from the right side.
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body embedded shipping addresses items0 ship to
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validateAddress1(formats strfmt.Registry) error {
	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"address1", "body", o.Address1, 60); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validateAddress2(formats strfmt.Registry) error {
	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"address2", "body", o.Address2, 60); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validateAdministrativeArea(formats strfmt.Registry) error {
	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"administrativeArea", "body", o.AdministrativeArea, 20); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validateCompany(formats strfmt.Registry) error {
	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"company", "body", o.Company, 60); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validateCountry(formats strfmt.Registry) error {
	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"country", "body", o.Country, 2); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validateEmail(formats strfmt.Registry) error {
	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"email", "body", o.Email, 320); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validateFirstName(formats strfmt.Registry) error {
	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"firstName", "body", o.FirstName, 60); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validateLastName(formats strfmt.Registry) error {
	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"lastName", "body", o.LastName, 60); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validateLocality(formats strfmt.Registry) error {
	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"locality", "body", o.Locality, 50); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validatePhoneNumber(formats strfmt.Registry) error {
	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"phoneNumber", "body", o.PhoneNumber, 15); err != nil {
		return err
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) validatePostalCode(formats strfmt.Registry) error {
	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"postalCode", "body", o.PostalCode, 10); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get customer shipping addresses list o k body embedded shipping addresses items0 ship to based on context it is used
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyEmbeddedShippingAddressesItems0ShipTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyLinks get customer shipping addresses list o k body links
swagger:model GetCustomerShippingAddressesListOKBodyLinks
*/
type GetCustomerShippingAddressesListOKBodyLinks struct {

	// first
	First *GetCustomerShippingAddressesListOKBodyLinksFirst `json:"first,omitempty"`

	// last
	Last *GetCustomerShippingAddressesListOKBodyLinksLast `json:"last,omitempty"`

	// next
	Next *GetCustomerShippingAddressesListOKBodyLinksNext `json:"next,omitempty"`

	// prev
	Prev *GetCustomerShippingAddressesListOKBodyLinksPrev `json:"prev,omitempty"`

	// self
	Self *GetCustomerShippingAddressesListOKBodyLinksSelf `json:"self,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body links
func (o *GetCustomerShippingAddressesListOKBodyLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFirst(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLast(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrev(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinks) validateFirst(formats strfmt.Registry) error {
	if swag.IsZero(o.First) { // not required
		return nil
	}

	if o.First != nil {
		if err := o.First.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "first")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "first")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinks) validateLast(formats strfmt.Registry) error {
	if swag.IsZero(o.Last) { // not required
		return nil
	}

	if o.Last != nil {
		if err := o.Last.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "last")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "last")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinks) validateNext(formats strfmt.Registry) error {
	if swag.IsZero(o.Next) { // not required
		return nil
	}

	if o.Next != nil {
		if err := o.Next.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "next")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "next")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinks) validatePrev(formats strfmt.Registry) error {
	if swag.IsZero(o.Prev) { // not required
		return nil
	}

	if o.Prev != nil {
		if err := o.Prev.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "prev")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "prev")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinks) validateSelf(formats strfmt.Registry) error {
	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "self")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body links based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyLinks) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateFirst(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateLast(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateNext(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidatePrev(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateSelf(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinks) contextValidateFirst(ctx context.Context, formats strfmt.Registry) error {

	if o.First != nil {

		if swag.IsZero(o.First) { // not required
			return nil
		}

		if err := o.First.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "first")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "first")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinks) contextValidateLast(ctx context.Context, formats strfmt.Registry) error {

	if o.Last != nil {

		if swag.IsZero(o.Last) { // not required
			return nil
		}

		if err := o.Last.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "last")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "last")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinks) contextValidateNext(ctx context.Context, formats strfmt.Registry) error {

	if o.Next != nil {

		if swag.IsZero(o.Next) { // not required
			return nil
		}

		if err := o.Next.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "next")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "next")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinks) contextValidatePrev(ctx context.Context, formats strfmt.Registry) error {

	if o.Prev != nil {

		if swag.IsZero(o.Prev) { // not required
			return nil
		}

		if err := o.Prev.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "prev")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "prev")
			}
			return err
		}
	}

	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinks) contextValidateSelf(ctx context.Context, formats strfmt.Registry) error {

	if o.Self != nil {

		if swag.IsZero(o.Self) { // not required
			return nil
		}

		if err := o.Self.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "self")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCustomerShippingAddressesListOK" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinks) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyLinksFirst get customer shipping addresses list o k body links first
swagger:model GetCustomerShippingAddressesListOKBodyLinksFirst
*/
type GetCustomerShippingAddressesListOKBodyLinksFirst struct {

	// Link to the first page.
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3/shipping-addresses?offset=0\u0026limit=1
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body links first
func (o *GetCustomerShippingAddressesListOKBodyLinksFirst) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body links first based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyLinksFirst) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinksFirst) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListOK"+"."+"_links"+"."+"first"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinksFirst) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinksFirst) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyLinksFirst
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyLinksLast get customer shipping addresses list o k body links last
swagger:model GetCustomerShippingAddressesListOKBodyLinksLast
*/
type GetCustomerShippingAddressesListOKBodyLinksLast struct {

	// Link to the last page.
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3/shipping-addresses?offset=0\u0026limit=1
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body links last
func (o *GetCustomerShippingAddressesListOKBodyLinksLast) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body links last based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyLinksLast) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinksLast) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListOK"+"."+"_links"+"."+"last"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinksLast) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinksLast) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyLinksLast
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyLinksNext get customer shipping addresses list o k body links next
swagger:model GetCustomerShippingAddressesListOKBodyLinksNext
*/
type GetCustomerShippingAddressesListOKBodyLinksNext struct {

	// Link to the next page.
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3/shipping-addresses?offset=0\u0026limit=1
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body links next
func (o *GetCustomerShippingAddressesListOKBodyLinksNext) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body links next based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyLinksNext) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinksNext) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListOK"+"."+"_links"+"."+"next"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinksNext) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinksNext) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyLinksNext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyLinksPrev get customer shipping addresses list o k body links prev
swagger:model GetCustomerShippingAddressesListOKBodyLinksPrev
*/
type GetCustomerShippingAddressesListOKBodyLinksPrev struct {

	// Link to the previous page.
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3/shipping-addresses?offset=0\u0026limit=1
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body links prev
func (o *GetCustomerShippingAddressesListOKBodyLinksPrev) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body links prev based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyLinksPrev) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinksPrev) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListOK"+"."+"_links"+"."+"prev"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinksPrev) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinksPrev) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyLinksPrev
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCustomerShippingAddressesListOKBodyLinksSelf get customer shipping addresses list o k body links self
swagger:model GetCustomerShippingAddressesListOKBodyLinksSelf
*/
type GetCustomerShippingAddressesListOKBodyLinksSelf struct {

	// Link to the current page.
	//
	// Example: /tms/v2/customers/D9F340DD3DB9C276E053A2598D0A41A3/shipping-addresses?offset=0\u0026limit=1
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this get customer shipping addresses list o k body links self
func (o *GetCustomerShippingAddressesListOKBodyLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this get customer shipping addresses list o k body links self based on the context it is used
func (o *GetCustomerShippingAddressesListOKBodyLinksSelf) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHref(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCustomerShippingAddressesListOKBodyLinksSelf) contextValidateHref(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "getCustomerShippingAddressesListOK"+"."+"_links"+"."+"self"+"."+"href", "body", string(o.Href)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCustomerShippingAddressesListOKBodyLinksSelf) UnmarshalBinary(b []byte) error {
	var res GetCustomerShippingAddressesListOKBodyLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
