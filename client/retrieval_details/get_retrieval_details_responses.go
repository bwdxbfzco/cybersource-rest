// Code generated by go-swagger; DO NOT EDIT.

package retrieval_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetRetrievalDetailsReader is a Reader for the GetRetrievalDetails structure.
type GetRetrievalDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRetrievalDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRetrievalDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /reporting/v3/retrieval-details] getRetrievalDetails", response, response.Code())
	}
}

// NewGetRetrievalDetailsOK creates a GetRetrievalDetailsOK with default headers values
func NewGetRetrievalDetailsOK() *GetRetrievalDetailsOK {
	return &GetRetrievalDetailsOK{}
}

/*
GetRetrievalDetailsOK describes a response with status code 200, with default header values.

Ok
*/
type GetRetrievalDetailsOK struct {
	Payload *GetRetrievalDetailsOKBody
}

// IsSuccess returns true when this get retrieval details o k response has a 2xx status code
func (o *GetRetrievalDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get retrieval details o k response has a 3xx status code
func (o *GetRetrievalDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get retrieval details o k response has a 4xx status code
func (o *GetRetrievalDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get retrieval details o k response has a 5xx status code
func (o *GetRetrievalDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get retrieval details o k response a status code equal to that given
func (o *GetRetrievalDetailsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get retrieval details o k response
func (o *GetRetrievalDetailsOK) Code() int {
	return 200
}

func (o *GetRetrievalDetailsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /reporting/v3/retrieval-details][%d] getRetrievalDetailsOK %s", 200, payload)
}

func (o *GetRetrievalDetailsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /reporting/v3/retrieval-details][%d] getRetrievalDetailsOK %s", 200, payload)
}

func (o *GetRetrievalDetailsOK) GetPayload() *GetRetrievalDetailsOKBody {
	return o.Payload
}

func (o *GetRetrievalDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRetrievalDetailsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetRetrievalDetailsOKBody reportingV3RetrievalDetailsGet200Response
swagger:model GetRetrievalDetailsOKBody
*/
type GetRetrievalDetailsOKBody struct {

	// Report Start Date (ISO 8601 Extended)
	// Example: 2017-10-01T10:10:10+05:00
	// Format: date-time
	EndTime strfmt.DateTime `json:"endTime,omitempty" xml:"ReportEndDate,attr,omitempty"`

	// Organization Id
	// Example: testrest
	OrganizationID string `json:"organizationId,omitempty" xml:"MerchantId,attr,omitempty"`

	// List of Retrieval Details list.
	RetrievalDetails []*GetRetrievalDetailsOKBodyRetrievalDetailsItems0 `json:"retrievalDetails"`

	// Report Start Date (ISO 8601 Extended)
	// Example: 2017-10-01T10:10:10+05:00
	// Format: date-time
	StartTime strfmt.DateTime `json:"startTime,omitempty" xml:"ReportStartDate,attr,omitempty"`
}

// Validate validates this get retrieval details o k body
func (o *GetRetrievalDetailsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEndTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRetrievalDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRetrievalDetailsOKBody) validateEndTime(formats strfmt.Registry) error {
	if swag.IsZero(o.EndTime) { // not required
		return nil
	}

	if err := validate.FormatOf("getRetrievalDetailsOK"+"."+"endTime", "body", "date-time", o.EndTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetRetrievalDetailsOKBody) validateRetrievalDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.RetrievalDetails) { // not required
		return nil
	}

	for i := 0; i < len(o.RetrievalDetails); i++ {
		if swag.IsZero(o.RetrievalDetails[i]) { // not required
			continue
		}

		if o.RetrievalDetails[i] != nil {
			if err := o.RetrievalDetails[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRetrievalDetailsOK" + "." + "retrievalDetails" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getRetrievalDetailsOK" + "." + "retrievalDetails" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetRetrievalDetailsOKBody) validateStartTime(formats strfmt.Registry) error {
	if swag.IsZero(o.StartTime) { // not required
		return nil
	}

	if err := validate.FormatOf("getRetrievalDetailsOK"+"."+"startTime", "body", "date-time", o.StartTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get retrieval details o k body based on the context it is used
func (o *GetRetrievalDetailsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRetrievalDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRetrievalDetailsOKBody) contextValidateRetrievalDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.RetrievalDetails); i++ {

		if o.RetrievalDetails[i] != nil {

			if swag.IsZero(o.RetrievalDetails[i]) { // not required
				return nil
			}

			if err := o.RetrievalDetails[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRetrievalDetailsOK" + "." + "retrievalDetails" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getRetrievalDetailsOK" + "." + "retrievalDetails" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetRetrievalDetailsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRetrievalDetailsOKBody) UnmarshalBinary(b []byte) error {
	var res GetRetrievalDetailsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetRetrievalDetailsOKBodyRetrievalDetailsItems0 get retrieval details o k body retrieval details items0
swagger:model GetRetrievalDetailsOKBodyRetrievalDetailsItems0
*/
type GetRetrievalDetailsOKBodyRetrievalDetailsItems0 struct {

	// Retrieval Action
	// Example: 3
	Action string `json:"action,omitempty"`

	// Retrieval Action Description
	// Example: Financial transaction
	ActionDescription string `json:"actionDescription,omitempty"`

	// Retrieval Alert Type
	// Example: 2
	AlertType string `json:"alertType,omitempty"`

	// Retrieval Amount
	// Example: 5
	Amount string `json:"amount,omitempty"`

	// ICS Request Applications
	// Example: ics_auth
	Applications string `json:"applications,omitempty"`

	// Card Type
	// Example: American Express
	CardType string `json:"cardType,omitempty"`

	// Valid ISO 4217 ALPHA-3 currency code
	// Example: USD
	CurrencyCode string `json:"currencyCode,omitempty"`

	// Customer Id
	// Example: Customer Id
	CustomerID string `json:"customerId,omitempty"`

	// Event Request Date
	// Example: 2017-10-01T10:10:10+05:00
	// Format: date-time
	EventRequestedTime strfmt.DateTime `json:"eventRequestedTime,omitempty"`

	// Merchant Name
	// Example: ZZZZZZ USA_EUR
	MerchantName string `json:"merchantName,omitempty"`

	// Merchant Reference Number
	// Example: 123
	MerchantReferenceNumber string `json:"merchantReferenceNumber,omitempty"`

	// Nature of Dispute
	// Example: Retrieval
	NatureOfDispute string `json:"natureOfDispute,omitempty"`

	// Original Settlement Date
	// Example: 2017-10-01T10:10:10+05:00
	// Format: date-time
	OriginalSettlementTime strfmt.DateTime `json:"originalSettlementTime,omitempty"`

	// Processor Merchant Id
	// Example: 174263416896
	ProcessorMerchantID string `json:"processorMerchantId,omitempty"`

	// Retrieval Reason Code
	// Example: 1050
	ReasonCode string `json:"reasonCode,omitempty"`

	// Representment CP Date
	// Example: 2017-10-01T10:10:10+05:00
	// Format: date-time
	RepresentmentCPTime strfmt.DateTime `json:"representmentCPTime,omitempty"`

	// Request Id
	// Example: 5060113732046412501541
	RequestID string `json:"requestId,omitempty"`

	// Response Due Date
	// Example: 2017-10-01T10:10:10+05:00
	// Format: date-time
	ResponseDueTime strfmt.DateTime `json:"responseDueTime,omitempty"`

	// Retrieval Sign
	// Example: C
	Sign string `json:"sign,omitempty"`

	// Retrieval Date
	// Example: 2017-10-01T10:10:10+05:00
	// Format: date-time
	Time strfmt.DateTime `json:"time,omitempty"`

	// Tracking Number
	// Example: 990175
	TrackingNumber string `json:"trackingNumber,omitempty"`

	// Transaction Reference Number
	// Example: 02230413
	TransactionReferenceNumber string `json:"transactionReferenceNumber,omitempty"`
}

// Validate validates this get retrieval details o k body retrieval details items0
func (o *GetRetrievalDetailsOKBodyRetrievalDetailsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEventRequestedTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOriginalSettlementTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRepresentmentCPTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResponseDueTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRetrievalDetailsOKBodyRetrievalDetailsItems0) validateEventRequestedTime(formats strfmt.Registry) error {
	if swag.IsZero(o.EventRequestedTime) { // not required
		return nil
	}

	if err := validate.FormatOf("eventRequestedTime", "body", "date-time", o.EventRequestedTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetRetrievalDetailsOKBodyRetrievalDetailsItems0) validateOriginalSettlementTime(formats strfmt.Registry) error {
	if swag.IsZero(o.OriginalSettlementTime) { // not required
		return nil
	}

	if err := validate.FormatOf("originalSettlementTime", "body", "date-time", o.OriginalSettlementTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetRetrievalDetailsOKBodyRetrievalDetailsItems0) validateRepresentmentCPTime(formats strfmt.Registry) error {
	if swag.IsZero(o.RepresentmentCPTime) { // not required
		return nil
	}

	if err := validate.FormatOf("representmentCPTime", "body", "date-time", o.RepresentmentCPTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetRetrievalDetailsOKBodyRetrievalDetailsItems0) validateResponseDueTime(formats strfmt.Registry) error {
	if swag.IsZero(o.ResponseDueTime) { // not required
		return nil
	}

	if err := validate.FormatOf("responseDueTime", "body", "date-time", o.ResponseDueTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetRetrievalDetailsOKBodyRetrievalDetailsItems0) validateTime(formats strfmt.Registry) error {
	if swag.IsZero(o.Time) { // not required
		return nil
	}

	if err := validate.FormatOf("time", "body", "date-time", o.Time.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get retrieval details o k body retrieval details items0 based on context it is used
func (o *GetRetrievalDetailsOKBodyRetrievalDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRetrievalDetailsOKBodyRetrievalDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRetrievalDetailsOKBodyRetrievalDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetRetrievalDetailsOKBodyRetrievalDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
